[{"C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\index.tsx":"1","C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\App.tsx":"2","C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\Contexts\\ActiveUserContext.tsx":"3","C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\Router\\Router.tsx":"4","C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\Services\\UserService.ts":"5","C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\config\\Api.ts":"6","C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\config\\Authorities.ts":"7","C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\Services\\AuthorityService.ts":"8","C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\Router\\PrivateRoute.tsx":"9","C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\components\\pages\\UserPage\\UserPage.tsx":"10","C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\components\\pages\\UserPage\\UserTable.tsx":"11","C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\components\\pages\\LoginPage\\LoginPage.tsx":"12","C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\components\\molecules\\UserForm\\UserForm.tsx":"13","C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\components\\pages\\LoggedInHomePage\\LoggedInHomePage.tsx":"14","C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\components\\pages\\HomePage\\HomePage.tsx":"15","C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\Services\\BlogpostService.ts":"16","C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\types\\models\\Blogpost.ts":"17","C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\components\\molecules\\UserActionButtons\\UserActionButtons.tsx":"18","C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\components\\molecules\\AuthButtonGroup\\AuthButtonGroup.tsx":"19","C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\components\\molecules\\PostCard\\PostCard.tsx":"20","C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\components\\organisms\\TrendingTopics\\TrendingTopics.tsx":"21","C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\components\\organisms\\HeroSection\\HeroSection.tsx":"22","C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\components\\organisms\\WelcomeSection\\WelcomeSection.tsx":"23","C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\components\\atoms\\SecondaryButton\\SecondaryButton.tsx":"24","C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\components\\atoms\\SecondaryButton\\SecondaryButtonStyles.ts":"25","C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\components\\atoms\\TextButton\\TextButton.tsx":"26","C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\components\\atoms\\PrimaryButton\\PrimaryButton.tsx":"27","C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\components\\atoms\\PrimaryButton\\PrimaryButtonStyles.ts":"28","C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\components\\atoms\\TextButton\\TextButtonStyles.ts":"29","C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\config\\Roles.ts":"30","C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\components\\pages\\BlogpostOverview\\BlogpostOverview.tsx":"31","C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\components\\pages\\RegisterPage\\RegisterPage.tsx":"32","C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\components\\pages\\RegisterPage\\RegisterPageStyle.ts":"33","C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\components\\atoms\\DeleteButton\\DeleteButton.tsx":"34","C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\components\\atoms\\OutlinedButton\\OutlinedButton.tsx":"35","C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\components\\atoms\\UpdateButton\\UpdateButton.tsx":"36","C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\components\\atoms\\DeleteButton\\DeleteButtonStyles.ts":"37","C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\components\\atoms\\UpdateButton\\UpdateButtonStyles.ts":"38","C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\components\\atoms\\OutlinedButton\\OutlinedButtonStyles.ts":"39","C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\components\\pages\\BlogpostOverview\\SinglePageBlogpostModify.tsx":"40","C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\components\\pages\\BlogpostOverview\\SinglePageBlogpostModifyStyles.ts":"41","C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\components\\molecules\\BlogpostForm\\BlogpostForm.tsx":"42","C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\components\\pages\\BlogpostOverview\\SinglePageBlogpost.tsx":"43","C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\components\\pages\\BlogpostOverview\\SinglePageBlogpostStyles.ts":"44","C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\components\\other\\PageLayout\\PageLayout.tsx":"45","C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\components\\other\\PageLayout\\PageLayoutStyles.ts":"46","C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\components\\organisms\\Navbar\\Navbar.tsx":"47","C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\components\\organisms\\Navbar\\NavbarStyles.ts":"48","C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\components\\pages\\BlogpostsByAuthor\\BlogpostsByAuthor.tsx":"49","C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\components\\pages\\AdminDashboard\\AdminDashboard.tsx":"50"},{"size":382,"mtime":1758092582899,"results":"51","hashOfConfig":"52"},{"size":316,"mtime":1758092582888,"results":"53","hashOfConfig":"52"},{"size":6753,"mtime":1758808166775,"results":"54","hashOfConfig":"52"},{"size":3381,"mtime":1758809006483,"results":"55","hashOfConfig":"52"},{"size":1006,"mtime":1758808166829,"results":"56","hashOfConfig":"52"},{"size":1817,"mtime":1758092582898,"results":"57","hashOfConfig":"52"},{"size":317,"mtime":1758808167070,"results":"58","hashOfConfig":"52"},{"size":1247,"mtime":1758092582891,"results":"59","hashOfConfig":"52"},{"size":2351,"mtime":1758808166781,"results":"60","hashOfConfig":"52"},{"size":2130,"mtime":1758808968680,"results":"61","hashOfConfig":"52"},{"size":1936,"mtime":1758092582897,"results":"62","hashOfConfig":"52"},{"size":3564,"mtime":1758808924493,"results":"63","hashOfConfig":"52"},{"size":3328,"mtime":1758808166881,"results":"64","hashOfConfig":"52"},{"size":5910,"mtime":1758808892511,"results":"65","hashOfConfig":"52"},{"size":6435,"mtime":1758808805582,"results":"66","hashOfConfig":"52"},{"size":1803,"mtime":1758808166788,"results":"67","hashOfConfig":"52"},{"size":705,"mtime":1758808167074,"results":"68","hashOfConfig":"52"},{"size":694,"mtime":1758808166877,"results":"69","hashOfConfig":"52"},{"size":1689,"mtime":1758808166870,"results":"70","hashOfConfig":"52"},{"size":1969,"mtime":1758808166876,"results":"71","hashOfConfig":"52"},{"size":1827,"mtime":1758808166894,"results":"72","hashOfConfig":"52"},{"size":2882,"mtime":1758808166884,"results":"73","hashOfConfig":"52"},{"size":1256,"mtime":1758808166900,"results":"74","hashOfConfig":"52"},{"size":639,"mtime":1758808166853,"results":"75","hashOfConfig":"52"},{"size":669,"mtime":1758808166854,"results":"76","hashOfConfig":"52"},{"size":618,"mtime":1758808166863,"results":"77","hashOfConfig":"52"},{"size":645,"mtime":1758808166850,"results":"78","hashOfConfig":"52"},{"size":690,"mtime":1758808166851,"results":"79","hashOfConfig":"52"},{"size":497,"mtime":1758808166866,"results":"80","hashOfConfig":"52"},{"size":79,"mtime":1758808167071,"results":"81","hashOfConfig":"52"},{"size":12697,"mtime":1758810193502,"results":"82","hashOfConfig":"52"},{"size":7503,"mtime":1758808951207,"results":"83","hashOfConfig":"52"},{"size":834,"mtime":1758808167060,"results":"84","hashOfConfig":"52"},{"size":638,"mtime":1758808166832,"results":"85","hashOfConfig":"52"},{"size":540,"mtime":1758808166845,"results":"86","hashOfConfig":"52"},{"size":632,"mtime":1758808166867,"results":"87","hashOfConfig":"52"},{"size":170,"mtime":1758808166837,"results":"88","hashOfConfig":"52"},{"size":170,"mtime":1758808166868,"results":"89","hashOfConfig":"52"},{"size":232,"mtime":1758808166847,"results":"90","hashOfConfig":"52"},{"size":4905,"mtime":1758808166913,"results":"91","hashOfConfig":"52"},{"size":1421,"mtime":1758808166916,"results":"92","hashOfConfig":"52"},{"size":2252,"mtime":1758808166874,"results":"93","hashOfConfig":"52"},{"size":5240,"mtime":1758808166910,"results":"94","hashOfConfig":"52"},{"size":1762,"mtime":1758808166919,"results":"95","hashOfConfig":"52"},{"size":925,"mtime":1758808166902,"results":"96","hashOfConfig":"52"},{"size":519,"mtime":1758808166905,"results":"97","hashOfConfig":"52"},{"size":2885,"mtime":1758808601069,"results":"98","hashOfConfig":"52"},{"size":786,"mtime":1758808166889,"results":"99","hashOfConfig":"52"},{"size":6009,"mtime":1758808166924,"results":"100","hashOfConfig":"52"},{"size":19404,"mtime":1758808698867,"results":"101","hashOfConfig":"52"},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},"1saynk2",{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"104"},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"122","usedDeprecatedRules":"104"},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"137","messages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"139","messages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"141","messages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"143","messages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"145","messages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"147","messages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"104"},{"filePath":"150","messages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"152","messages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"154","messages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"104"},{"filePath":"157","messages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"159","messages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"161","messages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"104"},{"filePath":"164","messages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"104"},{"filePath":"167","messages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"169","messages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"171","messages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"173","messages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"104"},{"filePath":"176","messages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"178","messages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"180","messages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"182","messages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"184","messages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"186","messages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"188","messages":"189","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"104"},{"filePath":"191","messages":"192","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"193","messages":"194","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"195","messages":"196","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"197","messages":"198","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"199","messages":"200","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"104"},{"filePath":"202","messages":"203","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"204","messages":"205","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"206","messages":"207","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"208","messages":"209","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"104"},{"filePath":"211","messages":"212","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\index.tsx",[],["213","214"],"C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\App.tsx",[],"C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\Contexts\\ActiveUserContext.tsx",["215"],"import { createContext, useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport api from \"../config/Api\";\r\nimport roles from \"../config/Roles\";\r\nimport AuthorityService from \"../Services/AuthorityService\";\r\nimport UserService from \"../Services/UserService\";\r\nimport { User } from \"../types/models/User.model\";\r\nimport { Nullable } from \"../types/Nullable\";\r\nimport * as jwt from \"jsonwebtoken\";\r\nimport {JwtPayload} from \"jsonwebtoken\";\r\n\r\n/**\r\n * USER_DATA_LOCAL_STORAGE_KEY defines the localStorageKey in which the\r\n * activeUser gets stored.\r\n */\r\nexport const USER_DATA_LOCAL_STORAGE_KEY = \"user\";\r\nexport const TOKEN_LOCAL_STORAGE_KEY = \"token\";\r\n\r\n/**\r\n * ActiveUserContextType defines the provided values\r\n */\r\nexport type ActiveUserContextType = {\r\n  user: Nullable<User>;\r\n  login: (email: string, password: string) => Promise<boolean>;\r\n  logout: () => void;\r\n  setActiveUser: (user: User) => void;\r\n  loadActiveUser: () => void;\r\n  checkRole: (roleToCheck: keyof typeof roles) => boolean;\r\n  activeUserHasRole: (roleToCheck: keyof typeof roles) => boolean;\r\n};\r\n\r\n/**\r\n * noContextProviderFound is a method that throws an error and is used\r\n * inside the defaultContextValue\r\n */\r\nconst noContextProviderFound = () => {\r\n  throw new Error(\"No provider for the ActiveUserContext found\");\r\n};\r\n\r\n/**\r\n * defaultContextValue defines the default values for the ActiveUserContext.\r\n */\r\nconst defaultContextValue: ActiveUserContextType = {\r\n  user: null,\r\n  login: noContextProviderFound,\r\n  logout: noContextProviderFound,\r\n  setActiveUser: noContextProviderFound,\r\n  loadActiveUser: noContextProviderFound,\r\n  checkRole: noContextProviderFound,\r\n  activeUserHasRole: noContextProviderFound,\r\n};\r\n\r\n/**\r\n * ActiveUserContext has the purpose of providing the currently active user\r\n * as well as related values, modifiers and related operations such as login\r\n * and logout.\r\n */\r\nconst ActiveUserContext =\r\n  createContext<ActiveUserContextType>(defaultContextValue);\r\nexport default ActiveUserContext;\r\n\r\n/**\r\n * Props for the ActiveUserContextProvider Component\r\n */\r\ntype ActiveUserContextProviderProps = {\r\n  children: React.ReactNode;\r\n};\r\n\r\n/**\r\n * ActiveUserContextProvider Component is used to provide the ActiveUserContext\r\n * to all child-components.\r\n * @param children consists of all the elements that are located inside the\r\n */\r\nexport const ActiveUserContextProvider = ({\r\n  children,\r\n}: ActiveUserContextProviderProps) => {\r\n  /**\r\n   * Try to load the user data that is stored inside the LocalStorage.\r\n   * If non is present, null will be returned.\r\n   */\r\n  const loadSavedUserData = (): Nullable<User> => {\r\n    const storeUser = localStorage.getItem(USER_DATA_LOCAL_STORAGE_KEY);\r\n    if (storeUser === null) return null;\r\n    return JSON.parse(storeUser);\r\n  };\r\n\r\n  // The following line defines the user state which is holding the user\r\n  // data inside this context.\r\n  const [user, setUser] = useState<Nullable<User>>(() => loadSavedUserData());\r\n  const navigate = useNavigate();\r\n  /**\r\n   * Update the user that is provided by the ActiveUserContext\r\n   * @param updatedUser\r\n   */\r\n  const setActiveUser = (updatedUser: User) => {\r\n    setUser(updatedUser);\r\n    localStorage.setItem(\r\n      USER_DATA_LOCAL_STORAGE_KEY,\r\n      JSON.stringify(updatedUser)\r\n    );\r\n  };\r\n\r\n  /**\r\n   * Remove all user and authorization related data from the localStorage\r\n   */\r\n  const resetAuthorization = () => {\r\n    // Reset the stored data inside the AuthorityService.\r\n    AuthorityService.clearAuthorities();\r\n    // Clear all data from the localStorage.\r\n    localStorage.clear();\r\n    // Set the user, which is stored inside the context to null.\r\n    setUser(null);\r\n  };\r\n\r\n  /**\r\n   * Logout the currently active user by resetting the stored user data\r\n   * and redirecting to the LoginPage.\r\n   */\r\n  const logout = () => {\r\n    // If no token is saved inside the local storage clear the localStorage directly\r\n    if (localStorage.getItem(TOKEN_LOCAL_STORAGE_KEY) === null) {\r\n      resetAuthorization();\r\n      return;\r\n    }\r\n    // If a token is present send a logout-request and clear the localStorage afterwards\r\n    api.get(\"/logout\").finally(resetAuthorization);\r\n    //navigate to login page\r\n    navigate(\"/login\");\r\n  };\r\n\r\n  /**\r\n   * Login with the provided credentials. If successful the current user gets\r\n   * updated and stored inside the context. Also the JWT-Token for further\r\n   * request based authentication is stored inside the localStorage.\r\n   * @param email\r\n   * @param password\r\n   */\r\n  const login = async (email: string, password: string) => {\r\n    await api.post(\"user/login\", { email, password }).then((response: any) => {\r\n      console.log(response.headers.authorization);\r\n      localStorage.setItem(\r\n        TOKEN_LOCAL_STORAGE_KEY,\r\n        response.headers.authorization\r\n      );\r\n      const tokenString = response.headers.authorization.replace('Bearer ', '');\r\n      const token = jwt.decode(tokenString) as JwtPayload;\r\n        UserService.getUser(token.sub!).then((user: User) => {\r\n          setActiveUser(user);\r\n        })\r\n      return true;\r\n    });\r\n    return false;\r\n  };\r\n\r\n  /**\r\n   * Request the user data for the currently active user from the api\r\n   * and save it to the context-state.\r\n   */\r\n  const loadActiveUser = () => {\r\n    return user\r\n      ? UserService.getUser(user.id).then((res: any) => {\r\n          setActiveUser(res);\r\n        })\r\n      : null;\r\n  };\r\n\r\n  function activeUserHasRole(roleToCheck: keyof typeof roles): boolean {\r\n    return user ? user.roles.some((role) => role.name === roleToCheck) : false;\r\n  }\r\n\r\n  /**\r\n   * Try to load the user-object from the localStorage if present.\r\n   * This is done automatically on the first render of this component.\r\n   */\r\n  useEffect(() => {\r\n    const token = localStorage.getItem(TOKEN_LOCAL_STORAGE_KEY);\r\n    if (token !== null) {\r\n      loadActiveUser();\r\n    }\r\n  }, []);\r\n\r\n  /**\r\n   * If the user state is updated and the user is not equal to null,\r\n   * the data used in the AuthorityService as well as the data stored inside\r\n   * the localStorage will be updated with the new user-data.\r\n   */\r\n  useEffect(() => {\r\n    if (user !== null) {\r\n      AuthorityService.initAuthoritySet(user);\r\n      localStorage.setItem(USER_DATA_LOCAL_STORAGE_KEY, JSON.stringify(user));\r\n    }\r\n  }, [user]);\r\n\r\n  return (\r\n    <div>\r\n      <ActiveUserContext.Provider\r\n        value={{\r\n          user,\r\n          setActiveUser,\r\n          login,\r\n          logout,\r\n          loadActiveUser,\r\n          checkRole: activeUserHasRole,\r\n          activeUserHasRole\r\n        }}\r\n      >\r\n        {children}\r\n      </ActiveUserContext.Provider>\r\n    </div>\r\n  );\r\n};\r\n","C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\Router\\Router.tsx",[],"C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\Services\\UserService.ts",[],"C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\config\\Api.ts",[],"C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\config\\Authorities.ts",[],"C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\Services\\AuthorityService.ts",[],"C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\Router\\PrivateRoute.tsx",["216","217","218"],"import React, { useContext } from 'react';\r\nimport { Navigate } from 'react-router-dom';\r\nimport * as jwt from 'jsonwebtoken';\r\nimport ActiveUserContext from '../Contexts/ActiveUserContext';\r\nimport AuthorityService from '../Services/AuthorityService';\r\nimport { Button } from '@mui/material';\r\nimport authorities from '../config/Authorities';\r\nimport PageLayout from \"../components/other/PageLayout/PageLayout\"; // or wherever it lives\r\n\r\n\r\ninterface Props {\r\n  element: React.ReactElement;\r\n  requiredAuths: authorities[];\r\n}\r\n\r\ntype JWTType = {\r\n  iss: string;\r\n  exp: number;\r\n};\r\n\r\nconst PrivateRoute: React.FC<Props> = ({\r\n  requiredAuths: requiredAuths,\r\n  element: RouteComponent,\r\n}) => {\r\n  const activeUserContext = useContext(ActiveUserContext);\r\n  /**\r\n   * isLoggedIn checks if the token, which is saved inside the localStorage,\r\n   * exists, isn't expired yet and has been issued by the correct issuer.\r\n   * If all of the above is true the user is seen as logged in.\r\n   */\r\n  const isLoggedIn = () => {\r\n    let tokenString = localStorage.getItem('token');\r\n    if (!tokenString) {\r\n      console.error('no token found');\r\n      return false;\r\n    }\r\n    tokenString = tokenString.replace('Bearer ', '');\r\n    const token: JWTType = jwt.decode(tokenString) as JWTType;\r\n    // Check if token does not exist or doesn't have an expiration claim or is expired.\r\n    if (!token || !token.exp || token.exp < Date.now() / 1000) {\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n  /**\r\n   * If the user is not logged in call activeUserContext.logout, which destroys\r\n   * all locally saved user data and redirects to /.\r\n   */\r\n  if (!isLoggedIn()) {\r\n    return <Navigate to='/' replace={true} />;\r\n  }\r\n  /**\r\n   * Check if the active user has at least 1 of the needed authorities.\r\n   * If no authorities are needed true is returned.\r\n   */\r\n  let hasNeededAuthorities =\r\n    requiredAuths.length === 0 ||\r\n    requiredAuths.some(AuthorityService.hasAuthority);\r\n\r\n  /**\r\n   * If the user doesn't possess the needed authorities Redirect the user to\r\n   * /unauthorized\r\n   */\r\n  if (!hasNeededAuthorities) {\r\n    return <Navigate to='/unauthorized' replace={true} />;\r\n  }\r\n\r\n  // All checks passed\r\n    return (\r\n        <PageLayout>\r\n            {RouteComponent}\r\n        </PageLayout>\r\n    );\r\n\r\n};\r\nexport default PrivateRoute;\r\n","C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\components\\pages\\UserPage\\UserPage.tsx",[],"C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\components\\pages\\UserPage\\UserTable.tsx",[],"C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\components\\pages\\LoginPage\\LoginPage.tsx",[],"C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\components\\molecules\\UserForm\\UserForm.tsx",[],"C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\components\\pages\\LoggedInHomePage\\LoggedInHomePage.tsx",[],"C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\components\\pages\\HomePage\\HomePage.tsx",[],"C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\Services\\BlogpostService.ts",[],"C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\types\\models\\Blogpost.ts",[],"C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\components\\molecules\\UserActionButtons\\UserActionButtons.tsx",[],"C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\components\\molecules\\AuthButtonGroup\\AuthButtonGroup.tsx",[],"C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\components\\molecules\\PostCard\\PostCard.tsx",[],"C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\components\\organisms\\TrendingTopics\\TrendingTopics.tsx",[],"C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\components\\organisms\\HeroSection\\HeroSection.tsx",["219","220"],"import React from 'react';\r\nimport { Box, Container, Typography, Grid, Chip } from '@mui/material';\r\nimport {\r\n  TrendingUp as TrendingIcon,\r\n  AutoAwesome as SparkleIcon\r\n} from '@mui/icons-material';\r\n\r\ninterface HeroSectionProps {\r\n  title: string;\r\n  subtitle: string;\r\n  logoSrc: string;\r\n  children?: React.ReactNode;\r\n  stats?: Array<{\r\n    icon: React.ReactNode;\r\n    label: string;\r\n  }>;\r\n}\r\n\r\nconst HeroSection: React.FC<HeroSectionProps> = ({\r\n  title,\r\n  subtitle,\r\n  logoSrc,\r\n  children,\r\n  stats\r\n}) => {\r\n  return (\r\n    <Box\r\n      sx={{\r\n        background: 'linear-gradient(135deg, #0f0fcf, #00d4ff)',\r\n        color: '#fff',\r\n        pt: 8,\r\n        pb: 12,\r\n        position: 'relative',\r\n        overflow: 'hidden'\r\n      }}\r\n    >\r\n      <Container maxWidth=\"lg\">\r\n        <Grid container spacing={4} alignItems=\"center\">\r\n          <Grid item xs={12} md={6}>\r\n            <Typography\r\n              variant=\"h2\"\r\n              component=\"h1\"\r\n              sx={{\r\n                fontWeight: 'bold',\r\n                mb: 3,\r\n                textShadow: '2px 2px 4px rgba(0,0,0,0.3)'\r\n              }}\r\n            >\r\n              {title}\r\n            </Typography>\r\n            <Typography\r\n              variant=\"h5\"\r\n              sx={{\r\n                mb: 4,\r\n                opacity: 0.95,\r\n                lineHeight: 1.6\r\n              }}\r\n            >\r\n              {subtitle}\r\n            </Typography>\r\n\r\n            {stats && (\r\n              <Box sx={{ display: 'flex', gap: 2, flexWrap: 'wrap', mb: 4 }}>\r\n                {stats.map((stat, index) => (\r\n                  <Chip\r\n                    key={index}\r\n                    icon={<>{stat.icon}</>}\r\n                    label={stat.label}\r\n                    sx={{\r\n                      bgcolor: 'rgba(255,255,255,0.2)',\r\n                      color: 'white',\r\n                      fontSize: '1rem',\r\n                      py: 2.5\r\n                    }}\r\n                  />\r\n                ))}\r\n              </Box>\r\n            )}\r\n\r\n            {children}\r\n          </Grid>\r\n\r\n          <Grid item xs={12} md={6}>\r\n            <Box\r\n              component=\"img\"\r\n              src={logoSrc}\r\n              alt=\"OurSpace Logo\"\r\n              sx={{\r\n                width: '100%',\r\n                maxWidth: '400px',\r\n                height: 'auto',\r\n                display: 'block',\r\n                margin: '0 auto',\r\n                filter: 'drop-shadow(0 10px 30px rgba(0,0,0,0.3))',\r\n                animation: 'float 3s ease-in-out infinite',\r\n                '@keyframes float': {\r\n                  '0%, 100%': { transform: 'translateY(0px)' },\r\n                  '50%': { transform: 'translateY(-20px)' }\r\n                }\r\n              }}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default HeroSection;","C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\components\\organisms\\WelcomeSection\\WelcomeSection.tsx",[],"C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\components\\atoms\\SecondaryButton\\SecondaryButton.tsx",[],"C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\components\\atoms\\SecondaryButton\\SecondaryButtonStyles.ts",["221"],"import { SxProps } from \"@mui/material\";\r\n\r\nconst lightButton: SxProps = {\r\n  borderColor: 'white',\r\n  color: 'white',\r\n  fontWeight: 'bold',\r\n  px: 4,\r\n  py: 1.5,\r\n  borderWidth: 2,\r\n  '&:hover': {\r\n    borderColor: 'white',\r\n    borderWidth: 2,\r\n    bgcolor: 'rgba(255,255,255,0.1)',\r\n    transform: 'translateY(-2px)'\r\n  }\r\n};\r\n\r\nconst darkButton: SxProps = {\r\n  borderColor: '#0f0fcf',\r\n  color: '#0f0fcf',\r\n  fontWeight: 'bold',\r\n  px: 4,\r\n  py: 1.5,\r\n  borderWidth: 2,\r\n  '&:hover': {\r\n    borderColor: '#0f0fcf',\r\n    borderWidth: 2,\r\n    bgcolor: 'rgba(15,15,207,0.05)',\r\n    transform: 'translateY(-2px)'\r\n  }\r\n};\r\n\r\nexport default { lightButton, darkButton };","C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\components\\atoms\\TextButton\\TextButton.tsx",[],"C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\components\\atoms\\PrimaryButton\\PrimaryButton.tsx",[],"C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\components\\atoms\\PrimaryButton\\PrimaryButtonStyles.ts",["222"],"import { SxProps } from \"@mui/material\";\r\n\r\nconst gradientButton: SxProps = {\r\n  background: 'linear-gradient(135deg, #0f0fcf, #00d4ff)',\r\n  color: 'white',\r\n  fontWeight: 'bold',\r\n  px: 4,\r\n  py: 1.5,\r\n  '&:hover': {\r\n    background: 'linear-gradient(135deg, #0a0aaf, #00b4dd)',\r\n    transform: 'translateY(-2px)',\r\n    boxShadow: '0 8px 20px rgba(0,0,0,0.3)'\r\n  }\r\n};\r\n\r\nconst defaultButton: SxProps = {\r\n  bgcolor: 'white',\r\n  color: '#0f0fcf',\r\n  fontWeight: 'bold',\r\n  px: 4,\r\n  py: 1.5,\r\n  '&:hover': {\r\n    bgcolor: 'rgba(255,255,255,0.9)',\r\n    transform: 'translateY(-2px)',\r\n    boxShadow: '0 8px 20px rgba(0,0,0,0.3)'\r\n  }\r\n};\r\n\r\nexport default { gradientButton, defaultButton };","C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\components\\atoms\\TextButton\\TextButtonStyles.ts",["223"],"import { SxProps } from \"@mui/material\";\r\n\r\nconst lightTextButton: SxProps = {\r\n  color: 'white',\r\n  fontWeight: 'bold',\r\n  px: 4,\r\n  py: 1.5,\r\n  '&:hover': {\r\n    bgcolor: 'rgba(255,255,255,0.1)',\r\n    transform: 'translateY(-2px)'\r\n  }\r\n};\r\n\r\nconst darkTextButton: SxProps = {\r\n  color: '#0f0fcf',\r\n  fontWeight: 'bold',\r\n  px: 4,\r\n  py: 1.5,\r\n  '&:hover': {\r\n    bgcolor: 'rgba(15,15,207,0.05)',\r\n    transform: 'translateY(-2px)'\r\n  }\r\n};\r\n\r\nexport default { lightTextButton, darkTextButton };","C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\config\\Roles.ts",[],"C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\components\\pages\\BlogpostOverview\\BlogpostOverview.tsx",[],"C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\components\\pages\\RegisterPage\\RegisterPage.tsx",[],"C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\components\\pages\\RegisterPage\\RegisterPageStyle.ts",["224"],"import { SxProps } from '@mui/material';\r\n\r\nconst signUpContainer: SxProps = {\r\n  position: 'relative',\r\n  height: 'calc((1 - var(--template-frame-height, 0)) * 100dvh)',\r\n  minHeight: '100%',\r\n  p: { xs: 2, sm: 4 },\r\n  '&::before': {\r\n    content: '\"\"',\r\n    display: 'block',\r\n    position: 'absolute',\r\n    zIndex: -1,\r\n    inset: 0,\r\n    backgroundImage:\r\n      'radial-gradient(ellipse at 50% 50%, hsl(210, 100%, 97%), hsl(0, 0%, 100%))',\r\n    backgroundRepeat: 'no-repeat',\r\n  },\r\n};\r\n\r\nconst registerCard: SxProps = {\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  alignSelf: 'center',\r\n  width: { xs: '100%', sm: 450 },\r\n  m: 'auto',\r\n  p: 4,\r\n  gap: 2,\r\n  boxShadow:\r\n    'hsla(220, 30%, 5%, 0.05) 0px 5px 15px 0px, hsla(220, 25%, 10%, 0.05) 0px 15px 35px -5px',\r\n};\r\n\r\nexport default { signUpContainer, registerCard };\r\n","C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\components\\atoms\\DeleteButton\\DeleteButton.tsx",[],"C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\components\\atoms\\OutlinedButton\\OutlinedButton.tsx",[],"C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\components\\atoms\\UpdateButton\\UpdateButton.tsx",[],"C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\components\\atoms\\DeleteButton\\DeleteButtonStyles.ts",[],"C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\components\\atoms\\UpdateButton\\UpdateButtonStyles.ts",[],"C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\components\\atoms\\OutlinedButton\\OutlinedButtonStyles.ts",[],"C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\components\\pages\\BlogpostOverview\\SinglePageBlogpostModify.tsx",["225","226","227","228"],"// SinglePageBlogpostModify.tsx\r\nimport * as React from 'react';\r\nimport {\r\n  Box, Button, Card, CssBaseline, FormControl, FormLabel, Grid,\r\n  MenuItem, TextField, Typography\r\n} from '@mui/material';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport styles from './SinglePageBlogpostModifyStyles';\r\n\r\nimport BlogpostService from '../../../Services/BlogpostService';\r\nimport { BlogpostCategory, BlogpostDTO } from '../../../types/models/Blogpost';\r\nimport BlogpostForm, {BlogpostFormValues} from '../../molecules/BlogpostForm/BlogpostForm';\r\n\r\ntype Mode = 'create' | 'edit';\r\ntype FormValues = Pick<BlogpostDTO, 'title' | 'text' | 'category'>;\r\n\r\nconst Schema = Yup.object({\r\n  title: Yup.string().trim().min(3, 'Atleast 3 signs').max(80).required('A title is required'),\r\n  category: Yup.mixed<BlogpostCategory>().oneOf(Object.values(BlogpostCategory) as BlogpostCategory[]).required('Topic is required'),\r\n  text: Yup.string().trim().min(5, 'Atleast 5 signs').max(8000).required('A text has to be entered'),\r\n});\r\n\r\nexport default function SinglePageBlogpostModify({\r\n                                                   providedId,\r\n                                                   genres,\r\n                                                 }: {\r\n  providedId?: string;\r\n  genres?: BlogpostCategory[];\r\n}) {\r\n  const navigate = useNavigate();\r\n  const { blogpostId: routeId } = useParams();\r\n  const blogpostId = providedId ?? routeId ?? undefined;\r\n\r\n  const mode: Mode = blogpostId ? 'edit' : 'create';\r\n  const categoryOptions = (genres ?? (Object.values(BlogpostCategory) as BlogpostCategory[]));\r\n\r\n  const [initialValues, setInitialValues] = React.useState<FormValues>({\r\n    title: '',\r\n    category: '' as unknown as BlogpostCategory,\r\n    text: '',\r\n  });\r\n  const [loading, setLoading] = React.useState(false);\r\n\r\n  React.useEffect(() => {\r\n    if (mode !== 'edit' || !blogpostId) return;\r\n    setLoading(true);\r\n    BlogpostService.getBlogpostById(blogpostId)\r\n      .then((bp) => {\r\n        setInitialValues({\r\n          title: bp.title ?? '',\r\n          category: bp.category ?? ('' as unknown as BlogpostCategory),\r\n          text: bp.text ?? '',\r\n        });\r\n      })\r\n      .finally(() => setLoading(false));\r\n  }, [mode, blogpostId]);\r\n\r\n  return (\r\n    <Grid>\r\n      <CssBaseline enableColorScheme />\r\n      <Box sx={styles.container}>\r\n        <Card sx={styles.card} variant=\"outlined\">\r\n          <Typography sx={styles.title}>\r\n            {mode === 'create' ? 'Create Blogpost' : 'Edit Blogpost'}\r\n          </Typography>\r\n\r\n          <Formik<FormValues>\r\n            enableReinitialize\r\n            initialValues={initialValues}\r\n            validationSchema={Schema}\r\n            onSubmit={async (values, { setSubmitting, setStatus }) => {\r\n              setStatus(undefined);\r\n              try {\r\n                const dto: BlogpostDTO = {\r\n                  title: values.title.trim(),\r\n                  text: values.text.trim(),\r\n                  category: values.category,\r\n                };\r\n                if (mode === 'create') {\r\n                  await BlogpostService.createBlogpost(dto);\r\n                } else {\r\n                  if (!blogpostId) throw new Error('No Blogpost-Id available');\r\n                  await BlogpostService.updateBlogpost(blogpostId, dto);\r\n                }\r\n                navigate('/blogposts');\r\n              } catch (e: any) {\r\n                setStatus(e?.response?.data?.message ?? e?.message ?? 'Error while saving');\r\n              } finally {\r\n                setSubmitting(false);\r\n              }\r\n            }}\r\n          >\r\n            {({ handleSubmit, getFieldProps, touched, errors, isSubmitting, status }) => (\r\n              <Box component=\"form\" onSubmit={handleSubmit} noValidate sx={{ display: 'flex', flexDirection: 'column', gap: 2 }}>\r\n                <BlogpostForm\r\n                  getFieldProps={getFieldProps as (name: keyof BlogpostFormValues) => any}\r\n                  touched={touched as any}\r\n                  errors={errors as any}\r\n                  categoryOptions={categoryOptions}\r\n                />\r\n\r\n                {status && <Typography variant=\"body2\" color=\"error\">{status}</Typography>}\r\n\r\n                <Box sx={styles.footer}>\r\n                  <Button type=\"button\" variant=\"contained\" sx={styles.cancel} id='cancel-button' onClick={() => navigate('/')} disabled={isSubmitting}>\r\n                    Cancel\r\n                  </Button>\r\n                  <Button type=\"submit\" variant=\"contained\" sx={styles.save} id='save-button' disabled={isSubmitting || loading}>\r\n                    {mode === 'create' ? 'Save' : 'Update'}\r\n                  </Button>\r\n                </Box>\r\n              </Box>\r\n            )}\r\n          </Formik>\r\n        </Card>\r\n      </Box>\r\n    </Grid>\r\n  );\r\n}\r\n","C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\components\\pages\\BlogpostOverview\\SinglePageBlogpostModifyStyles.ts",[],"C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\components\\molecules\\BlogpostForm\\BlogpostForm.tsx",[],"C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\components\\pages\\BlogpostOverview\\SinglePageBlogpost.tsx",[],"C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\components\\pages\\BlogpostOverview\\SinglePageBlogpostStyles.ts",[],"C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\components\\other\\PageLayout\\PageLayout.tsx",["229","230"],"import React, { useState } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport Navbar from \"../../organisms/Navbar/Navbar\";\r\nimport usePageLayoutStyles from \"./PageLayoutStyles\";\r\n\r\n/**\r\n * PageLayoutProps defines all props on the PageLayout component\r\n */\r\ntype PageLayoutProps = {\r\n    children: React.ReactNode;\r\n};\r\n\r\n/**\r\n * PageLayout component wraps its children inside a layout\r\n * with a Navbar on top and the content beneath it.\r\n */\r\nconst PageLayout = ({ children }: PageLayoutProps) => {\r\n    const classes = usePageLayoutStyles();\r\n    const [open, setOpen] = useState<boolean>(false);\r\n\r\n    return (\r\n        <>\r\n            <Navbar />\r\n            <div\r\n                className={clsx(\r\n                    classes.contentPusher,\r\n                    classes.contentStyle\r\n                )}\r\n            >\r\n                {children}\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default PageLayout;\r\n","C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\components\\other\\PageLayout\\PageLayoutStyles.ts",[],"C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\components\\organisms\\Navbar\\Navbar.tsx",[],"C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\components\\organisms\\Navbar\\NavbarStyles.ts",[],"C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\components\\pages\\BlogpostsByAuthor\\BlogpostsByAuthor.tsx",["231"],"import React, { useContext, useEffect, useState } from 'react';\r\nimport {\r\n    Container,\r\n    Grid,\r\n    Card,\r\n    CardContent,\r\n    Typography,\r\n    Box,\r\n    Chip,\r\n    CircularProgress,\r\n    Alert,\r\n    Avatar\r\n} from '@mui/material';\r\nimport {useNavigate, useParams} from 'react-router-dom';\r\nimport BlogpostService from '../../../Services/BlogpostService';\r\nimport { Blogpost } from '../../../types/models/Blogpost';\r\n\r\n\r\nconst BlogpostsByAuthor: React.FC = () => {\r\n    const { authorId } = useParams<{ authorId: string }>();\r\n    const navigate = useNavigate();\r\n\r\n    const [blogposts, setBlogposts] = useState<Blogpost[]>([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState<string | null>(null);\r\n\r\n    useEffect(() => {\r\n        if (authorId) {\r\n            fetchBlogpostsByAuthor(authorId);\r\n        }\r\n    }, [authorId]);\r\n\r\n    const fetchBlogpostsByAuthor = async (id: string) => {\r\n        try {\r\n            setLoading(true);\r\n            setError(null);\r\n            const data = await BlogpostService.getBlogpostsByAuthor(id);\r\n            const sortedData = data.sort((a, b) => new Date(b.createdAt!).getTime() - new Date(a.createdAt!).getTime());\r\n            setBlogposts(sortedData);\r\n        } catch (err: any) {\r\n            console.error(err);\r\n            setError(err.response?.data?.message || 'Failed to load blogposts');\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const getExcerpt = (text: string) => {\r\n        const maxLength = 300;\r\n        return text.length > maxLength ? text.substring(0, maxLength) + '...' : text;\r\n    };\r\n\r\n    const formatCategory = (category: string) => {\r\n        return category ? category.charAt(0).toUpperCase() + category.slice(1).toLowerCase() : 'OTHER';\r\n    };\r\n\r\n    const handleCardClick = (blogpostId: string) => {\r\n        navigate(`/blogpost/${blogpostId}`);\r\n    };\r\n\r\n    if (loading) {\r\n        return (\r\n            <Container sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', minHeight: '60vh' }}>\r\n                <CircularProgress />\r\n            </Container>\r\n        );\r\n    }\r\n\r\n    if (error) {\r\n        return (\r\n            <Container sx={{ mt: 4 }}>\r\n                <Alert severity=\"error\">{error}</Alert>\r\n            </Container>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <Container maxWidth=\"lg\" sx={{ py: 4 }}>\r\n            <Typography variant=\"h4\" sx={{ mb: 4, fontWeight: 'bold', textAlign: 'center' }}>\r\n                Blogposts by Author\r\n            </Typography>\r\n\r\n            {blogposts.length === 0 ? (\r\n                <Alert severity=\"info\">This author has not published any blogposts yet.</Alert>\r\n            ) : (\r\n                <Grid container spacing={3}>\r\n                    {blogposts.map((post) => (\r\n                        <Grid item xs={12} sm={6} md={4} key={post.id}>\r\n                            <Card\r\n                                onClick={() => handleCardClick(post.id)}\r\n                                sx={{\r\n                                    height: '100%',\r\n                                    display: 'flex',\r\n                                    flexDirection: 'column',\r\n                                    cursor: 'pointer',\r\n                                    position: 'relative',\r\n                                    transition: 'transform 0.2s, box-shadow 0.2s',\r\n                                    '&:hover': {\r\n                                        transform: 'translateY(-4px)',\r\n                                        boxShadow: '0 8px 24px rgba(0,0,0,0.15)'\r\n                                    }\r\n                                }}\r\n                            >\r\n                                <CardContent sx={{ flexGrow: 1 }}>\r\n                                    {/* Author info */}\r\n                                    <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>\r\n                                        <Avatar sx={{ bgcolor: '#0f0fcf', width: 32, height: 32, mr: 1 }}>\r\n                                            {post.author?.firstName?.[0] || 'A'}\r\n                                        </Avatar>\r\n                                        <Typography variant=\"body2\" color=\"text.secondary\">\r\n                                            {`${post.author?.firstName || ''} ${post.author?.lastName || ''}`.trim() || 'Anonymous'}\r\n                                        </Typography>\r\n                                        <Chip\r\n                                            label={formatCategory(post.category)}\r\n                                            size=\"small\"\r\n                                            sx={{\r\n                                                background: 'linear-gradient(135deg, #0f0fcf, #00d4ff)',\r\n                                                color: 'white',\r\n                                                fontWeight: 'bold',\r\n                                                marginLeft: 'auto'\r\n                                            }}\r\n                                        />\r\n                                    </Box>\r\n\r\n                                    <Typography variant=\"h6\" sx={{ mb: 1, fontWeight: 'bold' }}>{post.title}</Typography>\r\n                                    <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mb: 2 }}>\r\n                                        {getExcerpt(post.text)}\r\n                                    </Typography>\r\n                                    <Typography variant=\"caption\" color=\"text.secondary\">\r\n                                        {post.createdAt ? new Date(post.createdAt).toLocaleDateString() : 'Unknown date'}\r\n                                    </Typography>\r\n                                </CardContent>\r\n                            </Card>\r\n                        </Grid>\r\n                    ))}\r\n                </Grid>\r\n            )}\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default BlogpostsByAuthor;","C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\components\\pages\\AdminDashboard\\AdminDashboard.tsx",["232"],{"ruleId":"233","replacedBy":"234"},{"ruleId":"235","replacedBy":"236"},{"ruleId":"237","severity":1,"message":"238","line":180,"column":6,"nodeType":"239","endLine":180,"endColumn":8,"suggestions":"240"},{"ruleId":"241","severity":1,"message":"242","line":6,"column":10,"nodeType":"243","messageId":"244","endLine":6,"endColumn":16},{"ruleId":"245","severity":1,"message":"246","line":22,"column":3,"nodeType":"247","messageId":"248","endLine":22,"endColumn":31,"fix":"249"},{"ruleId":"241","severity":1,"message":"250","line":25,"column":9,"nodeType":"243","messageId":"244","endLine":25,"endColumn":26},{"ruleId":"241","severity":1,"message":"251","line":4,"column":17,"nodeType":"243","messageId":"244","endLine":4,"endColumn":29},{"ruleId":"241","severity":1,"message":"252","line":5,"column":18,"nodeType":"243","messageId":"244","endLine":5,"endColumn":29},{"ruleId":"253","severity":1,"message":"254","line":33,"column":1,"nodeType":"255","endLine":33,"endColumn":44},{"ruleId":"253","severity":1,"message":"254","line":29,"column":1,"nodeType":"255","endLine":29,"endColumn":50},{"ruleId":"253","severity":1,"message":"254","line":25,"column":1,"nodeType":"255","endLine":25,"endColumn":52},{"ruleId":"253","severity":1,"message":"254","line":32,"column":1,"nodeType":"255","endLine":32,"endColumn":50},{"ruleId":"241","severity":1,"message":"256","line":4,"column":35,"nodeType":"243","messageId":"244","endLine":4,"endColumn":46},{"ruleId":"241","severity":1,"message":"257","line":4,"column":48,"nodeType":"243","messageId":"244","endLine":4,"endColumn":57},{"ruleId":"241","severity":1,"message":"258","line":5,"column":3,"nodeType":"243","messageId":"244","endLine":5,"endColumn":11},{"ruleId":"241","severity":1,"message":"259","line":5,"column":13,"nodeType":"243","messageId":"244","endLine":5,"endColumn":22},{"ruleId":"241","severity":1,"message":"260","line":19,"column":12,"nodeType":"243","messageId":"244","endLine":19,"endColumn":16},{"ruleId":"241","severity":1,"message":"261","line":19,"column":18,"nodeType":"243","messageId":"244","endLine":19,"endColumn":25},{"ruleId":"241","severity":1,"message":"262","line":1,"column":17,"nodeType":"243","messageId":"244","endLine":1,"endColumn":27},{"ruleId":"241","severity":1,"message":"263","line":105,"column":9,"nodeType":"243","messageId":"244","endLine":105,"endColumn":18},"no-native-reassign",["264"],"no-negated-in-lhs",["265"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadActiveUser'. Either include it or remove the dependency array.","ArrayExpression",["266"],"@typescript-eslint/no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","no-useless-rename","Destructuring assignment requiredAuths unnecessarily renamed.","Property","unnecessarilyRenamed",{"range":"267","text":"268"},"'activeUserContext' is assigned a value but never used.","'TrendingIcon' is defined but never used.","'SparkleIcon' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'FormControl' is defined but never used.","'FormLabel' is defined but never used.","'MenuItem' is defined but never used.","'TextField' is defined but never used.","'open' is assigned a value but never used.","'setOpen' is assigned a value but never used.","'useContext' is defined but never used.","'canDelete' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"269","fix":"270"},[631,659],"requiredAuths","Update the dependencies array to be: [loadActiveUser]",{"range":"271","text":"272"},[5968,5970],"[loadActiveUser]"]