[{"C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\index.tsx":"1","C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\App.tsx":"2","C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\Contexts\\ActiveUserContext.tsx":"3","C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\Router\\Router.tsx":"4","C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\Services\\UserService.ts":"5","C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\config\\Api.ts":"6","C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\config\\Authorities.ts":"7","C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\Services\\AuthorityService.ts":"8","C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\Router\\PrivateRoute.tsx":"9","C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\components\\pages\\UserPage\\UserPage.tsx":"10","C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\components\\pages\\UserPage\\UserTable.tsx":"11","C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\components\\pages\\LoginPage\\LoginPage.tsx":"12","C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\components\\molecules\\UserForm\\UserForm.tsx":"13","C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\components\\pages\\LoggedInHomePage\\LoggedInHomePage.tsx":"14","C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\components\\pages\\HomePage\\HomePage.tsx":"15","C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\Services\\BlogpostService.ts":"16","C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\types\\models\\Blogpost.ts":"17","C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\components\\molecules\\UserActionButtons\\UserActionButtons.tsx":"18","C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\components\\molecules\\AuthButtonGroup\\AuthButtonGroup.tsx":"19","C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\components\\molecules\\PostCard\\PostCard.tsx":"20","C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\components\\organisms\\TrendingTopics\\TrendingTopics.tsx":"21","C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\components\\organisms\\HeroSection\\HeroSection.tsx":"22","C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\components\\organisms\\WelcomeSection\\WelcomeSection.tsx":"23","C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\components\\atoms\\SecondaryButton\\SecondaryButton.tsx":"24","C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\components\\atoms\\SecondaryButton\\SecondaryButtonStyles.ts":"25","C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\components\\atoms\\TextButton\\TextButton.tsx":"26","C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\components\\atoms\\PrimaryButton\\PrimaryButton.tsx":"27","C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\components\\atoms\\PrimaryButton\\PrimaryButtonStyles.ts":"28","C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\components\\atoms\\TextButton\\TextButtonStyles.ts":"29","C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\config\\Roles.ts":"30","C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\components\\pages\\BlogpostOverview\\BlogpostOverview.tsx":"31","C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\components\\pages\\RegisterPage\\RegisterPage.tsx":"32","C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\components\\pages\\RegisterPage\\RegisterPageStyle.ts":"33","C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\components\\atoms\\DeleteButton\\DeleteButton.tsx":"34","C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\components\\atoms\\OutlinedButton\\OutlinedButton.tsx":"35","C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\components\\atoms\\UpdateButton\\UpdateButton.tsx":"36","C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\components\\atoms\\DeleteButton\\DeleteButtonStyles.ts":"37","C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\components\\atoms\\UpdateButton\\UpdateButtonStyles.ts":"38","C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\components\\atoms\\OutlinedButton\\OutlinedButtonStyles.ts":"39","C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\components\\pages\\BlogpostOverview\\SinglePageBlogpostModify.tsx":"40","C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\components\\pages\\BlogpostOverview\\SinglePageBlogpostModifyStyles.ts":"41","C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\components\\molecules\\BlogpostForm\\BlogpostForm.tsx":"42","C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\components\\pages\\BlogpostOverview\\SinglePageBlogpost.tsx":"43","C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\components\\pages\\BlogpostOverview\\SinglePageBlogpostStyles.ts":"44"},{"size":382,"mtime":1758092582899,"results":"45","hashOfConfig":"46"},{"size":316,"mtime":1758092582888,"results":"47","hashOfConfig":"46"},{"size":6753,"mtime":1758782634679,"results":"48","hashOfConfig":"46"},{"size":3001,"mtime":1758783499790,"results":"49","hashOfConfig":"46"},{"size":762,"mtime":1758720267577,"results":"50","hashOfConfig":"46"},{"size":1817,"mtime":1758092582898,"results":"51","hashOfConfig":"46"},{"size":325,"mtime":1758721862017,"results":"52","hashOfConfig":"46"},{"size":1247,"mtime":1758092582891,"results":"53","hashOfConfig":"46"},{"size":2401,"mtime":1758782040693,"results":"54","hashOfConfig":"46"},{"size":1114,"mtime":1758092582897,"results":"55","hashOfConfig":"46"},{"size":1936,"mtime":1758092582897,"results":"56","hashOfConfig":"46"},{"size":3559,"mtime":1758720267585,"results":"57","hashOfConfig":"46"},{"size":3345,"mtime":1758092582893,"results":"58","hashOfConfig":"46"},{"size":5626,"mtime":1758783433575,"results":"59","hashOfConfig":"46"},{"size":6629,"mtime":1758716604438,"results":"60","hashOfConfig":"46"},{"size":1165,"mtime":1758713707867,"results":"61","hashOfConfig":"46"},{"size":705,"mtime":1758721456248,"results":"62","hashOfConfig":"46"},{"size":694,"mtime":1758724493530,"results":"63","hashOfConfig":"46"},{"size":1689,"mtime":1758713707898,"results":"64","hashOfConfig":"46"},{"size":1969,"mtime":1758724360882,"results":"65","hashOfConfig":"46"},{"size":1600,"mtime":1758713707921,"results":"66","hashOfConfig":"46"},{"size":2882,"mtime":1758713707910,"results":"67","hashOfConfig":"46"},{"size":1256,"mtime":1758713707926,"results":"68","hashOfConfig":"46"},{"size":639,"mtime":1758713707885,"results":"69","hashOfConfig":"46"},{"size":669,"mtime":1758713707887,"results":"70","hashOfConfig":"46"},{"size":618,"mtime":1758713707896,"results":"71","hashOfConfig":"46"},{"size":645,"mtime":1758713707879,"results":"72","hashOfConfig":"46"},{"size":690,"mtime":1758713707881,"results":"73","hashOfConfig":"46"},{"size":497,"mtime":1758713707897,"results":"74","hashOfConfig":"46"},{"size":79,"mtime":1758716604441,"results":"75","hashOfConfig":"46"},{"size":8179,"mtime":1758720273981,"results":"76","hashOfConfig":"46"},{"size":7503,"mtime":1758720925325,"results":"77","hashOfConfig":"46"},{"size":834,"mtime":1758720267589,"results":"78","hashOfConfig":"46"},{"size":638,"mtime":1758720273972,"results":"79","hashOfConfig":"46"},{"size":540,"mtime":1758720273974,"results":"80","hashOfConfig":"46"},{"size":632,"mtime":1758720273977,"results":"81","hashOfConfig":"46"},{"size":170,"mtime":1758720273973,"results":"82","hashOfConfig":"46"},{"size":170,"mtime":1758720273979,"results":"83","hashOfConfig":"46"},{"size":232,"mtime":1758720273975,"results":"84","hashOfConfig":"46"},{"size":4869,"mtime":1758724199813,"results":"85","hashOfConfig":"46"},{"size":1421,"mtime":1758723815308,"results":"86","hashOfConfig":"46"},{"size":2252,"mtime":1758724078651,"results":"87","hashOfConfig":"46"},{"size":5092,"mtime":1758784370437,"results":"88","hashOfConfig":"46"},{"size":1762,"mtime":1758784023851,"results":"89","hashOfConfig":"46"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},"1saynk2",{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"92"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"110","usedDeprecatedRules":"92"},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"92"},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"92"},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"137","messages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"92"},{"filePath":"140","messages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"142","messages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"144","messages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"92"},{"filePath":"147","messages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"149","messages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"151","messages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"92"},{"filePath":"154","messages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"92"},{"filePath":"157","messages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"159","messages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"92"},{"filePath":"162","messages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"164","messages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"92"},{"filePath":"167","messages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"169","messages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"171","messages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"173","messages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"175","messages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"177","messages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"179","messages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"92"},{"filePath":"182","messages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"184","messages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"186","messages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"188","messages":"189","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\index.tsx",[],["190","191"],"C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\App.tsx",[],"C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\Contexts\\ActiveUserContext.tsx",["192"],"import { createContext, useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport api from \"../config/Api\";\r\nimport roles from \"../config/Roles\";\r\nimport AuthorityService from \"../Services/AuthorityService\";\r\nimport UserService from \"../Services/UserService\";\r\nimport { User } from \"../types/models/User.model\";\r\nimport { Nullable } from \"../types/Nullable\";\r\nimport * as jwt from \"jsonwebtoken\";\r\nimport {JwtPayload} from \"jsonwebtoken\";\r\n\r\n/**\r\n * USER_DATA_LOCAL_STORAGE_KEY defines the localStorageKey in which the\r\n * activeUser gets stored.\r\n */\r\nexport const USER_DATA_LOCAL_STORAGE_KEY = \"user\";\r\nexport const TOKEN_LOCAL_STORAGE_KEY = \"token\";\r\n\r\n/**\r\n * ActiveUserContextType defines the provided values\r\n */\r\nexport type ActiveUserContextType = {\r\n  user: Nullable<User>;\r\n  login: (email: string, password: string) => Promise<boolean>;\r\n  logout: () => void;\r\n  setActiveUser: (user: User) => void;\r\n  loadActiveUser: () => void;\r\n  checkRole: (roleToCheck: keyof typeof roles) => boolean;\r\n  activeUserHasRole: (roleToCheck: keyof typeof roles) => boolean;\r\n};\r\n\r\n/**\r\n * noContextProviderFound is a method that throws an error and is used\r\n * inside the defaultContextValue\r\n */\r\nconst noContextProviderFound = () => {\r\n  throw new Error(\"No provider for the ActiveUserContext found\");\r\n};\r\n\r\n/**\r\n * defaultContextValue defines the default values for the ActiveUserContext.\r\n */\r\nconst defaultContextValue: ActiveUserContextType = {\r\n  user: null,\r\n  login: noContextProviderFound,\r\n  logout: noContextProviderFound,\r\n  setActiveUser: noContextProviderFound,\r\n  loadActiveUser: noContextProviderFound,\r\n  checkRole: noContextProviderFound,\r\n  activeUserHasRole: noContextProviderFound,\r\n};\r\n\r\n/**\r\n * ActiveUserContext has the purpose of providing the currently active user\r\n * as well as related values, modifiers and related operations such as login\r\n * and logout.\r\n */\r\nconst ActiveUserContext =\r\n  createContext<ActiveUserContextType>(defaultContextValue);\r\nexport default ActiveUserContext;\r\n\r\n/**\r\n * Props for the ActiveUserContextProvider Component\r\n */\r\ntype ActiveUserContextProviderProps = {\r\n  children: React.ReactNode;\r\n};\r\n\r\n/**\r\n * ActiveUserContextProvider Component is used to provide the ActiveUserContext\r\n * to all child-components.\r\n * @param children consists of all the elements that are located inside the\r\n */\r\nexport const ActiveUserContextProvider = ({\r\n  children,\r\n}: ActiveUserContextProviderProps) => {\r\n  /**\r\n   * Try to load the user data that is stored inside the LocalStorage.\r\n   * If non is present, null will be returned.\r\n   */\r\n  const loadSavedUserData = (): Nullable<User> => {\r\n    const storeUser = localStorage.getItem(USER_DATA_LOCAL_STORAGE_KEY);\r\n    if (storeUser === null) return null;\r\n    return JSON.parse(storeUser);\r\n  };\r\n\r\n  // The following line defines the user state which is holding the user\r\n  // data inside this context.\r\n  const [user, setUser] = useState<Nullable<User>>(() => loadSavedUserData());\r\n  const navigate = useNavigate();\r\n  /**\r\n   * Update the user that is provided by the ActiveUserContext\r\n   * @param updatedUser\r\n   */\r\n  const setActiveUser = (updatedUser: User) => {\r\n    setUser(updatedUser);\r\n    localStorage.setItem(\r\n      USER_DATA_LOCAL_STORAGE_KEY,\r\n      JSON.stringify(updatedUser)\r\n    );\r\n  };\r\n\r\n  /**\r\n   * Remove all user and authorization related data from the localStorage\r\n   */\r\n  const resetAuthorization = () => {\r\n    // Reset the stored data inside the AuthorityService.\r\n    AuthorityService.clearAuthorities();\r\n    // Clear all data from the localStorage.\r\n    localStorage.clear();\r\n    // Set the user, which is stored inside the context to null.\r\n    setUser(null);\r\n  };\r\n\r\n  /**\r\n   * Logout the currently active user by resetting the stored user data\r\n   * and redirecting to the LoginPage.\r\n   */\r\n  const logout = () => {\r\n    // If no token is saved inside the local storage clear the localStorage directly\r\n    if (localStorage.getItem(TOKEN_LOCAL_STORAGE_KEY) === null) {\r\n      resetAuthorization();\r\n      return;\r\n    }\r\n    // If a token is present send a logout-request and clear the localStorage afterwards\r\n    api.get(\"/logout\").finally(resetAuthorization);\r\n    //navigate to login page\r\n    navigate(\"/login\");\r\n  };\r\n\r\n  /**\r\n   * Login with the provided credentials. If successful the current user gets\r\n   * updated and stored inside the context. Also the JWT-Token for further\r\n   * request based authentication is stored inside the localStorage.\r\n   * @param email\r\n   * @param password\r\n   */\r\n  const login = async (email: string, password: string) => {\r\n    await api.post(\"user/login\", { email, password }).then((response: any) => {\r\n      console.log(response.headers.authorization);\r\n      localStorage.setItem(\r\n        TOKEN_LOCAL_STORAGE_KEY,\r\n        response.headers.authorization\r\n      );\r\n      const tokenString = response.headers.authorization.replace('Bearer ', '');\r\n      const token = jwt.decode(tokenString) as JwtPayload;\r\n        UserService.getUser(token.sub!).then((user: User) => {\r\n          setActiveUser(user);\r\n        })\r\n      return true;\r\n    });\r\n    return false;\r\n  };\r\n\r\n  /**\r\n   * Request the user data for the currently active user from the api\r\n   * and save it to the context-state.\r\n   */\r\n  const loadActiveUser = () => {\r\n    return user\r\n      ? UserService.getUser(user.id).then((res: any) => {\r\n          setActiveUser(res);\r\n        })\r\n      : null;\r\n  };\r\n\r\n  function activeUserHasRole(roleToCheck: keyof typeof roles): boolean {\r\n    return user ? user.roles.some((role) => role.name === roleToCheck) : false;\r\n  }\r\n\r\n  /**\r\n   * Try to load the user-object from the localStorage if present.\r\n   * This is done automatically on the first render of this component.\r\n   */\r\n  useEffect(() => {\r\n    const token = localStorage.getItem(TOKEN_LOCAL_STORAGE_KEY);\r\n    if (token !== null) {\r\n      loadActiveUser();\r\n    }\r\n  }, []);\r\n\r\n  /**\r\n   * If the user state is updated and the user is not equal to null,\r\n   * the data used in the AuthorityService as well as the data stored inside\r\n   * the localStorage will be updated with the new user-data.\r\n   */\r\n  useEffect(() => {\r\n    if (user !== null) {\r\n      AuthorityService.initAuthoritySet(user);\r\n      localStorage.setItem(USER_DATA_LOCAL_STORAGE_KEY, JSON.stringify(user));\r\n    }\r\n  }, [user]);\r\n\r\n  return (\r\n    <div>\r\n      <ActiveUserContext.Provider\r\n        value={{\r\n          user,\r\n          setActiveUser,\r\n          login,\r\n          logout,\r\n          loadActiveUser,\r\n          checkRole: activeUserHasRole,\r\n          activeUserHasRole\r\n        }}\r\n      >\r\n        {children}\r\n      </ActiveUserContext.Provider>\r\n    </div>\r\n  );\r\n};\r\n","C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\Router\\Router.tsx",[],"C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\Services\\UserService.ts",[],"C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\config\\Api.ts",[],"C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\config\\Authorities.ts",[],"C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\Services\\AuthorityService.ts",[],"C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\Router\\PrivateRoute.tsx",["193"],"import React, { useContext } from 'react';\r\nimport { Navigate } from 'react-router-dom';\r\nimport * as jwt from 'jsonwebtoken';\r\nimport ActiveUserContext from '../Contexts/ActiveUserContext';\r\nimport AuthorityService from '../Services/AuthorityService';\r\nimport { Button } from '@mui/material';\r\nimport authorities from '../config/Authorities';\r\n\r\ninterface Props {\r\n  element: React.ReactElement;\r\n  requiredAuths: authorities[];\r\n}\r\n\r\ntype JWTType = {\r\n  iss: string;\r\n  exp: number;\r\n};\r\n\r\nconst PrivateRoute: React.FC<Props> = ({\r\n  requiredAuths: requiredAuths,\r\n  element: RouteComponent,\r\n}) => {\r\n  const activeUserContext = useContext(ActiveUserContext);\r\n  /**\r\n   * isLoggedIn checks if the token, which is saved inside the localStorage,\r\n   * exists, isn't expired yet and has been issued by the correct issuer.\r\n   * If all of the above is true the user is seen as logged in.\r\n   */\r\n  const isLoggedIn = () => {\r\n    let tokenString = localStorage.getItem('token');\r\n    if (!tokenString) {\r\n      console.error('no token found');\r\n      return false;\r\n    }\r\n    tokenString = tokenString.replace('Bearer ', '');\r\n    const token: JWTType = jwt.decode(tokenString) as JWTType;\r\n    // Check if token does not exist or doesn't have an expiration claim or is expired.\r\n    if (!token || !token.exp || token.exp < Date.now() / 1000) {\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n  /**\r\n   * If the user is not logged in call activeUserContext.logout, which destroys\r\n   * all locally saved user data and redirects to /login.\r\n   */\r\n  if (!isLoggedIn()) {\r\n    activeUserContext.logout();\r\n    return <Navigate to='/login' replace={true} />;\r\n  }\r\n  /**\r\n   * Check if the active user has at least 1 of the needed authorities.\r\n   * If no authorities are needed true is returned.\r\n   */\r\n  let hasNeededAuthorities =\r\n    requiredAuths.length === 0 ||\r\n    requiredAuths.some(AuthorityService.hasAuthority);\r\n\r\n  /**\r\n   * If the user doesn't possess the needed authorities Redirect the user to\r\n   * /unauthorized\r\n   */\r\n  if (!hasNeededAuthorities) {\r\n    return <Navigate to='/unauthorized' replace={true} />;\r\n  }\r\n\r\n  // All checks passed\r\n  return (\r\n    //Pagelayout puts the Navigation, Menu etc. around the component\r\n    <div>\r\n      <Button onClick={activeUserContext.logout}>Logout</Button>\r\n      {RouteComponent}\r\n    </div>\r\n  );\r\n};\r\nexport default PrivateRoute;\r\n","C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\components\\pages\\UserPage\\UserPage.tsx",[],"C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\components\\pages\\UserPage\\UserTable.tsx",[],"C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\components\\pages\\LoginPage\\LoginPage.tsx",["194","195"],"import {\r\n  Paper,\r\n  Grid,\r\n  TextField,\r\n  Button,\r\n  Typography,\r\n  Link,\r\n} from '@mui/material';\r\nimport React, { useContext } from 'react';\r\n\r\nimport { Form, Formik } from 'formik';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport * as Yup from 'yup';\r\nimport ActiveUserContext from '../../../Contexts/ActiveUserContext';\r\nimport Box from \"@mui/material/Box\";\r\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  email: Yup.string(),\r\n  password: Yup.string(),\r\n});\r\n\r\nconst Login = () => {\r\n  const paperStyle = {\r\n    padding: 20,\r\n    height: '70vh',\r\n    width: 280,\r\n    margin: '20px auto',\r\n  };\r\n  const btnstyle = { margin: '8px 0' };\r\n  const navigate = useNavigate();\r\n  const { login } = useContext(ActiveUserContext);\r\n\r\n  const handleSubmit = (values: { email: string; password: string }) => {\r\n    login(values.email.toLowerCase(), values.password)\r\n      .then(() => {\r\n        console.log(values);\r\n\r\n        navigate('/');\r\n      })\r\n      .catch((error) => {\r\n        if (\r\n          (typeof error.response !== 'undefined' &&\r\n            error.response.status === 401) ||\r\n          error.response.status === 403\r\n        ) {\r\n          alert('invalid login');\r\n        } else {\r\n          alert('login Error');\r\n        }\r\n      });\r\n  };\r\n  return (\r\n    <Grid>\r\n      <Paper elevation={10} style={paperStyle}>\r\n        <Box className=\"registerHeader\" sx={{ mb: 1 }}>\r\n          <Button\r\n            startIcon={<ArrowBackIcon />}\r\n            variant=\"text\"\r\n            onClick={() => navigate('/')}\r\n          >\r\n            Zurück\r\n          </Button>\r\n        </Box>\r\n        <Grid>\r\n          <h2>Sign In</h2>\r\n          <p>Default login:</p>\r\n          <p>email: admin@example.com</p>\r\n          <p>pw: 1234</p>\r\n        </Grid>\r\n\r\n        <Formik\r\n          initialValues={{\r\n            email: '',\r\n            password: '',\r\n          }}\r\n          enableReinitialize\r\n          validationSchema={validationSchema}\r\n          onSubmit={handleSubmit}\r\n          validateOnChange\r\n          isInitialValid\r\n        >\r\n          {(props) => (\r\n            <Form onSubmit={props.handleSubmit}>\r\n              <TextField\r\n                label='email'\r\n                id='email'\r\n                placeholder='Enter username'\r\n                fullWidth\r\n                required\r\n                autoFocus\r\n                onChange={props.handleChange}\r\n                onBlur={props.handleBlur}\r\n                value={props.values.email}\r\n              />\r\n              {props.errors.email && (\r\n                <div id='feedback'>{props.errors.email}</div>\r\n              )}\r\n\r\n              <TextField\r\n                id='password'\r\n                label='password'\r\n                placeholder='Enter password'\r\n                type='password'\r\n                fullWidth\r\n                required\r\n                onChange={props.handleChange}\r\n                onBlur={props.handleBlur}\r\n                value={props.values.password}\r\n              />\r\n              {props.errors.password && (\r\n                <div id='feedback'>{props.errors.password}</div>\r\n              )}\r\n\r\n              <Button\r\n                type='submit'\r\n                color='primary'\r\n                variant='contained'\r\n                style={btnstyle}\r\n                fullWidth\r\n              >\r\n                Sign in\r\n              </Button>\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n      </Paper>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\components\\molecules\\UserForm\\UserForm.tsx",[],"C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\components\\pages\\LoggedInHomePage\\LoggedInHomePage.tsx",[],"C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\components\\pages\\HomePage\\HomePage.tsx",["196","197","198"],"import { Box, Container, Typography, Grid, Paper, Chip } from '@mui/material';\r\nimport {\r\n  Create as CreateIcon,\r\n  People as PeopleIcon,\r\n  TrendingUp as TrendingIcon,\r\n  AutoAwesome as SparkleIcon,\r\n  FormatQuote as QuoteIcon,\r\n  Category as CategoryIcon\r\n} from '@mui/icons-material';\r\nimport logo from '../../../logo1.png';\r\nimport HeroSection from '../../organisms/HeroSection/HeroSection';\r\nimport AuthButtonGroup from '../../molecules/AuthButtonGroup/AuthButtonGroup';\r\nimport { BlogpostCategory } from '../../../types/models/Blogpost';\r\n\r\nexport default function HomePage() {\r\n    return (\r\n      <>\r\n        {/* NAVBAR PLACEHOLDER - Add your navigation component here */}\r\n\r\n        {/* Hero Section */}\r\n        <HeroSection\r\n          title=\"OurSpace Blog\"\r\n          subtitle=\"Discover fascinating stories, share your thoughts, and connect with a community of creative minds.\"\r\n          logoSrc={logo}\r\n        >\r\n          <AuthButtonGroup />\r\n        </HeroSection>\r\n\r\n        {/* Features Section */}\r\n        <Container maxWidth=\"lg\" sx={{ py: 8 }}>\r\n          <Typography\r\n            variant=\"h3\"\r\n            align=\"center\"\r\n            sx={{ mb: 6, fontWeight: 'bold' }}\r\n          >\r\n            Why OurSpace?\r\n          </Typography>\r\n          <Grid container spacing={4} sx={{ mb: 4 }}>\r\n            <Grid item xs={12} md={4}>\r\n              <Paper\r\n                elevation={0}\r\n                sx={{\r\n                  p: 4,\r\n                  textAlign: 'center',\r\n                  height: '100%',\r\n                  bgcolor: 'rgba(15, 15, 207, 0.05)',\r\n                  borderRadius: 3,\r\n                  transition: 'transform 0.3s',\r\n                  '&:hover': {\r\n                    transform: 'translateY(-8px)',\r\n                    boxShadow: '0 8px 24px rgba(0,0,0,0.1)'\r\n                  }\r\n                }}\r\n              >\r\n                <CreateIcon sx={{ fontSize: 48, color: '#0f0fcf', mb: 2 }} />\r\n                <Typography variant=\"h5\" sx={{ mb: 2, fontWeight: 'bold' }}>\r\n                    Creative writing\r\n                </Typography>\r\n                <Typography variant=\"body1\" color=\"text.secondary\">\r\n                    Write and publish your own blog posts with our\r\n                    intuitive editor. Share your ideas with the world.\r\n                </Typography>\r\n              </Paper>\r\n            </Grid>\r\n            <Grid item xs={12} md={4}>\r\n              <Paper\r\n                elevation={0}\r\n                sx={{\r\n                  p: 4,\r\n                  textAlign: 'center',\r\n                  height: '100%',\r\n                  bgcolor: 'rgba(0, 212, 255, 0.05)',\r\n                  borderRadius: 3,\r\n                  transition: 'transform 0.3s',\r\n                  '&:hover': {\r\n                    transform: 'translateY(-8px)',\r\n                    boxShadow: '0 8px 24px rgba(0,0,0,0.1)'\r\n                  }\r\n                }}\r\n              >\r\n                <PeopleIcon sx={{ fontSize: 48, color: '#00d4ff', mb: 2 }} />\r\n                <Typography variant=\"h5\" sx={{ mb: 2, fontWeight: 'bold' }}>\r\n                  Community\r\n                </Typography>\r\n                <Typography variant=\"body1\" color=\"text.secondary\">\r\n                    Read exciting blog posts from your favorite authors and discover new perspectives.\r\n                </Typography>\r\n              </Paper>\r\n            </Grid>\r\n            <Grid item xs={12} md={4}>\r\n              <Paper\r\n                elevation={0}\r\n                sx={{\r\n                  p: 4,\r\n                  textAlign: 'center',\r\n                  height: '100%',\r\n                  bgcolor: 'rgba(15, 15, 207, 0.05)',\r\n                  borderRadius: 3,\r\n                  transition: 'transform 0.3s',\r\n                  '&:hover': {\r\n                    transform: 'translateY(-8px)',\r\n                    boxShadow: '0 8px 24px rgba(0,0,0,0.1)'\r\n                  }\r\n                }}\r\n              >\r\n                <CategoryIcon sx={{ fontSize: 48, color: '#0f0fcf', mb: 2 }} />\r\n                <Typography variant=\"h5\" sx={{ mb: 2, fontWeight: 'bold' }}>\r\n                    Diverse topics\r\n                </Typography>\r\n                <Typography variant=\"body1\" color=\"text.secondary\">\r\n                    From technology to lifestyle to travel –\r\n                    find content on all the topics that interest you.\r\n                </Typography>\r\n              </Paper>\r\n            </Grid>\r\n          </Grid>\r\n        </Container>\r\n\r\n        {/* Categories Showcase */}\r\n        <Box sx={{ bgcolor: '#f5f5f5', py: 8 }}>\r\n          <Container maxWidth=\"lg\">\r\n            <Typography\r\n              variant=\"h3\"\r\n              align=\"center\"\r\n              sx={{ mb: 6, fontWeight: 'bold' }}\r\n            >\r\n                Popular Categories\r\n            </Typography>\r\n            <Grid container spacing={2} justifyContent=\"center\">\r\n              {Object.values(BlogpostCategory).filter(cat => cat !== 'OTHER').map((category) => (\r\n                <Grid item key={category}>\r\n                  <Chip\r\n                    label={category.charAt(0) + category.slice(1).toLowerCase()}\r\n                    sx={{\r\n                      fontSize: '1rem',\r\n                      py: 2.5,\r\n                      px: 2,\r\n                      background: 'linear-gradient(135deg, #0f0fcf, #00d4ff)',\r\n                      color: 'white',\r\n                      fontWeight: 'bold',\r\n                      transition: 'transform 0.2s',\r\n                      '&:hover': {\r\n                        transform: 'scale(1.05)'\r\n                      }\r\n                    }}\r\n                  />\r\n                </Grid>\r\n              ))}\r\n            </Grid>\r\n          </Container>\r\n        </Box>\r\n\r\n        {/* Call to Action Section */}\r\n        <Box\r\n          sx={{\r\n            background: 'linear-gradient(135deg, #0f0fcf, #00d4ff)',\r\n            color: 'white',\r\n            py: 10,\r\n            textAlign: 'center'\r\n          }}\r\n        >\r\n          <Container maxWidth=\"md\">\r\n            <Typography\r\n              variant=\"h3\"\r\n              sx={{\r\n                mb: 3,\r\n                fontWeight: 'bold',\r\n                textShadow: '2px 2px 4px rgba(0,0,0,0.3)'\r\n              }}\r\n            >\r\n                Ready to tell your story?\r\n            </Typography>\r\n            <Typography variant=\"h6\" sx={{ opacity: 0.95 }}>\r\n                Join our community of authors and readers.\r\n                Register for free and start writing today!\r\n            </Typography>\r\n          </Container>\r\n        </Box>\r\n      </>\r\n    );\r\n}","C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\Services\\BlogpostService.ts",[],"C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\types\\models\\Blogpost.ts",[],"C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\components\\molecules\\UserActionButtons\\UserActionButtons.tsx",[],"C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\components\\molecules\\AuthButtonGroup\\AuthButtonGroup.tsx",[],"C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\components\\molecules\\PostCard\\PostCard.tsx",[],"C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\components\\organisms\\TrendingTopics\\TrendingTopics.tsx",[],"C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\components\\organisms\\HeroSection\\HeroSection.tsx",["199","200"],"import React from 'react';\r\nimport { Box, Container, Typography, Grid, Chip } from '@mui/material';\r\nimport {\r\n  TrendingUp as TrendingIcon,\r\n  AutoAwesome as SparkleIcon\r\n} from '@mui/icons-material';\r\n\r\ninterface HeroSectionProps {\r\n  title: string;\r\n  subtitle: string;\r\n  logoSrc: string;\r\n  children?: React.ReactNode;\r\n  stats?: Array<{\r\n    icon: React.ReactNode;\r\n    label: string;\r\n  }>;\r\n}\r\n\r\nconst HeroSection: React.FC<HeroSectionProps> = ({\r\n  title,\r\n  subtitle,\r\n  logoSrc,\r\n  children,\r\n  stats\r\n}) => {\r\n  return (\r\n    <Box\r\n      sx={{\r\n        background: 'linear-gradient(135deg, #0f0fcf, #00d4ff)',\r\n        color: '#fff',\r\n        pt: 8,\r\n        pb: 12,\r\n        position: 'relative',\r\n        overflow: 'hidden'\r\n      }}\r\n    >\r\n      <Container maxWidth=\"lg\">\r\n        <Grid container spacing={4} alignItems=\"center\">\r\n          <Grid item xs={12} md={6}>\r\n            <Typography\r\n              variant=\"h2\"\r\n              component=\"h1\"\r\n              sx={{\r\n                fontWeight: 'bold',\r\n                mb: 3,\r\n                textShadow: '2px 2px 4px rgba(0,0,0,0.3)'\r\n              }}\r\n            >\r\n              {title}\r\n            </Typography>\r\n            <Typography\r\n              variant=\"h5\"\r\n              sx={{\r\n                mb: 4,\r\n                opacity: 0.95,\r\n                lineHeight: 1.6\r\n              }}\r\n            >\r\n              {subtitle}\r\n            </Typography>\r\n\r\n            {stats && (\r\n              <Box sx={{ display: 'flex', gap: 2, flexWrap: 'wrap', mb: 4 }}>\r\n                {stats.map((stat, index) => (\r\n                  <Chip\r\n                    key={index}\r\n                    icon={<>{stat.icon}</>}\r\n                    label={stat.label}\r\n                    sx={{\r\n                      bgcolor: 'rgba(255,255,255,0.2)',\r\n                      color: 'white',\r\n                      fontSize: '1rem',\r\n                      py: 2.5\r\n                    }}\r\n                  />\r\n                ))}\r\n              </Box>\r\n            )}\r\n\r\n            {children}\r\n          </Grid>\r\n\r\n          <Grid item xs={12} md={6}>\r\n            <Box\r\n              component=\"img\"\r\n              src={logoSrc}\r\n              alt=\"OurSpace Logo\"\r\n              sx={{\r\n                width: '100%',\r\n                maxWidth: '400px',\r\n                height: 'auto',\r\n                display: 'block',\r\n                margin: '0 auto',\r\n                filter: 'drop-shadow(0 10px 30px rgba(0,0,0,0.3))',\r\n                animation: 'float 3s ease-in-out infinite',\r\n                '@keyframes float': {\r\n                  '0%, 100%': { transform: 'translateY(0px)' },\r\n                  '50%': { transform: 'translateY(-20px)' }\r\n                }\r\n              }}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default HeroSection;","C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\components\\organisms\\WelcomeSection\\WelcomeSection.tsx",[],"C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\components\\atoms\\SecondaryButton\\SecondaryButton.tsx",[],"C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\components\\atoms\\SecondaryButton\\SecondaryButtonStyles.ts",["201"],"import { SxProps } from \"@mui/material\";\r\n\r\nconst lightButton: SxProps = {\r\n  borderColor: 'white',\r\n  color: 'white',\r\n  fontWeight: 'bold',\r\n  px: 4,\r\n  py: 1.5,\r\n  borderWidth: 2,\r\n  '&:hover': {\r\n    borderColor: 'white',\r\n    borderWidth: 2,\r\n    bgcolor: 'rgba(255,255,255,0.1)',\r\n    transform: 'translateY(-2px)'\r\n  }\r\n};\r\n\r\nconst darkButton: SxProps = {\r\n  borderColor: '#0f0fcf',\r\n  color: '#0f0fcf',\r\n  fontWeight: 'bold',\r\n  px: 4,\r\n  py: 1.5,\r\n  borderWidth: 2,\r\n  '&:hover': {\r\n    borderColor: '#0f0fcf',\r\n    borderWidth: 2,\r\n    bgcolor: 'rgba(15,15,207,0.05)',\r\n    transform: 'translateY(-2px)'\r\n  }\r\n};\r\n\r\nexport default { lightButton, darkButton };","C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\components\\atoms\\TextButton\\TextButton.tsx",[],"C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\components\\atoms\\PrimaryButton\\PrimaryButton.tsx",[],"C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\components\\atoms\\PrimaryButton\\PrimaryButtonStyles.ts",["202"],"import { SxProps } from \"@mui/material\";\r\n\r\nconst gradientButton: SxProps = {\r\n  background: 'linear-gradient(135deg, #0f0fcf, #00d4ff)',\r\n  color: 'white',\r\n  fontWeight: 'bold',\r\n  px: 4,\r\n  py: 1.5,\r\n  '&:hover': {\r\n    background: 'linear-gradient(135deg, #0a0aaf, #00b4dd)',\r\n    transform: 'translateY(-2px)',\r\n    boxShadow: '0 8px 20px rgba(0,0,0,0.3)'\r\n  }\r\n};\r\n\r\nconst defaultButton: SxProps = {\r\n  bgcolor: 'white',\r\n  color: '#0f0fcf',\r\n  fontWeight: 'bold',\r\n  px: 4,\r\n  py: 1.5,\r\n  '&:hover': {\r\n    bgcolor: 'rgba(255,255,255,0.9)',\r\n    transform: 'translateY(-2px)',\r\n    boxShadow: '0 8px 20px rgba(0,0,0,0.3)'\r\n  }\r\n};\r\n\r\nexport default { gradientButton, defaultButton };","C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\components\\atoms\\TextButton\\TextButtonStyles.ts",["203"],"import { SxProps } from \"@mui/material\";\r\n\r\nconst lightTextButton: SxProps = {\r\n  color: 'white',\r\n  fontWeight: 'bold',\r\n  px: 4,\r\n  py: 1.5,\r\n  '&:hover': {\r\n    bgcolor: 'rgba(255,255,255,0.1)',\r\n    transform: 'translateY(-2px)'\r\n  }\r\n};\r\n\r\nconst darkTextButton: SxProps = {\r\n  color: '#0f0fcf',\r\n  fontWeight: 'bold',\r\n  px: 4,\r\n  py: 1.5,\r\n  '&:hover': {\r\n    bgcolor: 'rgba(15,15,207,0.05)',\r\n    transform: 'translateY(-2px)'\r\n  }\r\n};\r\n\r\nexport default { lightTextButton, darkTextButton };","C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\config\\Roles.ts",[],"C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\components\\pages\\BlogpostOverview\\BlogpostOverview.tsx",["204"],"import React, { useContext, useEffect, useState } from 'react';\r\nimport {\r\n  Container,\r\n  Grid,\r\n  Card,\r\n  CardContent,\r\n  Typography,\r\n  Box,\r\n  Chip,\r\n  CircularProgress,\r\n  Alert,\r\n  Button,\r\n  IconButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogActions,\r\n  Avatar\r\n} from '@mui/material';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport ActiveUserContext from '../../../Contexts/ActiveUserContext';\r\nimport BlogpostService from '../../../Services/BlogpostService';\r\nimport { Blogpost } from '../../../types/models/Blogpost';\r\nimport roles from '../../../config/Roles';\r\nimport DeleteButton from '../../atoms/DeleteButton/DeleteButton';\r\nimport UpdateButton from '../../atoms/UpdateButton/UpdateButton';\r\n\r\nconst BlogpostOverview: React.FC = () => {\r\n  const navigate = useNavigate();\r\n  const { user } = useContext(ActiveUserContext);\r\n  const [blogposts, setBlogposts] = useState<Blogpost[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [deleteDialogOpen, setDeleteDialogOpen] = useState(false);\r\n  const [postToDelete, setPostToDelete] = useState<string | null>(null);\r\n\r\n  // Check if user is admin (only if user is logged in)\r\n  const isAdmin = user && user.roles?.some(role => role.name === roles.ADMIN);\r\n\r\n  useEffect(() => {\r\n    fetchBlogposts();\r\n  }, []);\r\n\r\n  const fetchBlogposts = async () => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n      const data = await BlogpostService.getAllBlogposts();\r\n      // Sort by most recent first\r\n      const sortedData = data.sort((a, b) => {\r\n        const dateA = a.createdAt ? new Date(a.createdAt).getTime() : 0;\r\n        const dateB = b.createdAt ? new Date(b.createdAt).getTime() : 0;\r\n        return dateB - dateA;\r\n      });\r\n      setBlogposts(sortedData);\r\n    } catch (err: any) {\r\n      console.error('Error fetching blogposts:', err);\r\n      setError(err.response?.data?.message || 'Failed to load blogposts');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleCardClick = (blogpostId: string) => {\r\n    navigate(`/blogpost/${blogpostId}`);\r\n  };\r\n\r\n  const handleEdit = (e: React.MouseEvent, blogpostId: string) => {\r\n    e.stopPropagation();\r\n    navigate(`/blogpost/edit/${blogpostId}`);\r\n  };\r\n\r\n  const handleDeleteClick = (e: React.MouseEvent, blogpostId: string) => {\r\n    e.stopPropagation();\r\n    setPostToDelete(blogpostId);\r\n    setDeleteDialogOpen(true);\r\n  };\r\n\r\n  const handleDeleteConfirm = async () => {\r\n    if (postToDelete) {\r\n      try {\r\n        await BlogpostService.deleteBlogpost(postToDelete);\r\n        await fetchBlogposts(); // Refresh the list\r\n        setDeleteDialogOpen(false);\r\n        setPostToDelete(null);\r\n      } catch (err: any) {\r\n        console.error('Error deleting blogpost:', err);\r\n        alert(err.response?.data?.message || 'Failed to delete blogpost');\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleDeleteCancel = () => {\r\n    setDeleteDialogOpen(false);\r\n    setPostToDelete(null);\r\n  };\r\n\r\n  const getExcerpt = (text: string) => {\r\n    if (!text) return '';\r\n    const maxLength = 300; // Increased for better preview\r\n    return text.length > maxLength ? text.substring(0, maxLength) + '...' : text;\r\n  };\r\n\r\n  const formatCategory = (category: string) => {\r\n    if (!category) return 'OTHER';\r\n    return category.charAt(0) + category.slice(1).toLowerCase();\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <Container sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', minHeight: '60vh' }}>\r\n        <CircularProgress />\r\n      </Container>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <Container sx={{ mt: 4 }}>\r\n        <Alert severity=\"error\">{error}</Alert>\r\n        <Button onClick={fetchBlogposts} sx={{ mt: 2 }}>\r\n          Retry\r\n        </Button>\r\n      </Container>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Container maxWidth=\"lg\" sx={{ py: 4 }}>\r\n      <Typography variant=\"h3\" sx={{ mb: 4, fontWeight: 'bold', textAlign: 'center' }}>\r\n        All Blogposts\r\n      </Typography>\r\n\r\n      {blogposts.length === 0 ? (\r\n        <Alert severity=\"info\">No blogposts available yet.</Alert>\r\n      ) : (\r\n        <Grid container spacing={3} justifyContent=\"center\">\r\n          {blogposts.map((post) => (\r\n            <Grid item xs={12} sm={6} md={4} key={post.id}>\r\n              <Card\r\n                onClick={() => handleCardClick(post.id)}\r\n                sx={{\r\n                  height: '100%',\r\n                  display: 'flex',\r\n                  flexDirection: 'column',\r\n                  cursor: 'pointer',\r\n                  position: 'relative',\r\n                  transition: 'transform 0.2s, box-shadow 0.2s',\r\n                  '&:hover': {\r\n                    transform: 'translateY(-4px)',\r\n                    boxShadow: '0 8px 24px rgba(0,0,0,0.15)'\r\n                  }\r\n                }}\r\n              >\r\n                <CardContent sx={{ flexGrow: 1, display: 'flex', flexDirection: 'column' }}>\r\n\r\n                  {/* Author and Category */}\r\n                  <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>\r\n                    <Avatar sx={{ bgcolor: '#0f0fcf', width: 32, height: 32, mr: 1 }}>\r\n                      {post.author?.firstName?.[0] || 'A'}\r\n                    </Avatar>\r\n                    <Box sx={{ flexGrow: 1 }}>\r\n                      <Typography variant=\"body2\" color=\"text.secondary\">\r\n                        {`${post.author?.firstName || ''} ${post.author?.lastName || ''}`.trim() || 'Anonymous'}\r\n                      </Typography>\r\n                    </Box>\r\n                    <Chip\r\n                      label={formatCategory(post.category)}\r\n                      size=\"small\"\r\n                      sx={{\r\n                        background: 'linear-gradient(135deg, #0f0fcf, #00d4ff)',\r\n                        color: 'white',\r\n                        fontWeight: 'bold'\r\n                      }}\r\n                    />\r\n                  </Box>\r\n\r\n                  {/* Title */}\r\n                  <Typography variant=\"h6\" sx={{ mb: 1, fontWeight: 'bold' }}>\r\n                    {post.title || 'Untitled'}\r\n                  </Typography>\r\n\r\n                  {/* Excerpt */}\r\n                  <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mb: 2, flexGrow: 1 }}>\r\n                    {getExcerpt(post.text)}\r\n                  </Typography>\r\n\r\n                  {/* Date - positioned at bottom */}\r\n                  <Box sx={{ mt: 'auto', mb: 1 }}>\r\n                    <Typography variant=\"caption\" color=\"text.secondary\">\r\n                      {post.createdAt ? new Date(post.createdAt).toLocaleDateString() : 'Recently'}\r\n                    </Typography>\r\n                  </Box>\r\n\r\n                  {/* Admin Actions */}\r\n                  {isAdmin && (\r\n                    <Box sx={{ display: 'flex', gap: 1, mt: 2, justifyContent: 'center' }}>\r\n                      <UpdateButton\r\n                        onClick={(e) => handleEdit(e, post.id)}\r\n                        size=\"small\"\r\n                      />\r\n                      <DeleteButton\r\n                        onClick={(e) => handleDeleteClick(e, post.id)}\r\n                        size=\"small\"\r\n                      />\r\n                    </Box>\r\n                  )}\r\n                </CardContent>\r\n              </Card>\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n      )}\r\n\r\n      {/* Delete Confirmation Dialog */}\r\n      <Dialog\r\n        open={deleteDialogOpen}\r\n        onClose={handleDeleteCancel}\r\n      >\r\n        <DialogTitle>Confirm Delete</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            Are you sure you want to delete this blogpost? This action cannot be undone.\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleDeleteCancel}>Cancel</Button>\r\n          <Button onClick={handleDeleteConfirm} color=\"error\" variant=\"contained\">\r\n            Delete\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default BlogpostOverview;","C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\components\\pages\\RegisterPage\\RegisterPage.tsx",[],"C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\components\\pages\\RegisterPage\\RegisterPageStyle.ts",["205"],"import { SxProps } from '@mui/material';\r\n\r\nconst signUpContainer: SxProps = {\r\n  position: 'relative',\r\n  height: 'calc((1 - var(--template-frame-height, 0)) * 100dvh)',\r\n  minHeight: '100%',\r\n  p: { xs: 2, sm: 4 },\r\n  '&::before': {\r\n    content: '\"\"',\r\n    display: 'block',\r\n    position: 'absolute',\r\n    zIndex: -1,\r\n    inset: 0,\r\n    backgroundImage:\r\n      'radial-gradient(ellipse at 50% 50%, hsl(210, 100%, 97%), hsl(0, 0%, 100%))',\r\n    backgroundRepeat: 'no-repeat',\r\n  },\r\n};\r\n\r\nconst registerCard: SxProps = {\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  alignSelf: 'center',\r\n  width: { xs: '100%', sm: 450 },\r\n  m: 'auto',\r\n  p: 4,\r\n  gap: 2,\r\n  boxShadow:\r\n    'hsla(220, 30%, 5%, 0.05) 0px 5px 15px 0px, hsla(220, 25%, 10%, 0.05) 0px 15px 35px -5px',\r\n};\r\n\r\nexport default { signUpContainer, registerCard };\r\n","C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\components\\atoms\\DeleteButton\\DeleteButton.tsx",[],"C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\components\\atoms\\OutlinedButton\\OutlinedButton.tsx",[],"C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\components\\atoms\\UpdateButton\\UpdateButton.tsx",[],"C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\components\\atoms\\DeleteButton\\DeleteButtonStyles.ts",[],"C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\components\\atoms\\UpdateButton\\UpdateButtonStyles.ts",[],"C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\components\\atoms\\OutlinedButton\\OutlinedButtonStyles.ts",[],"C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\components\\pages\\BlogpostOverview\\SinglePageBlogpostModify.tsx",["206","207","208","209"],"// SinglePageBlogpostModify.tsx\r\nimport * as React from 'react';\r\nimport {\r\n  Box, Button, Card, CssBaseline, FormControl, FormLabel, Grid,\r\n  MenuItem, TextField, Typography\r\n} from '@mui/material';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport styles from './SinglePageBlogpostModifyStyles';\r\n\r\nimport BlogpostService from '../../../Services/BlogpostService';\r\nimport { BlogpostCategory, BlogpostDTO } from '../../../types/models/Blogpost';\r\nimport BlogpostForm, {BlogpostFormValues} from '../../molecules/BlogpostForm/BlogpostForm';\r\n\r\ntype Mode = 'create' | 'edit';\r\ntype FormValues = Pick<BlogpostDTO, 'title' | 'text' | 'category'>;\r\n\r\nconst Schema = Yup.object({\r\n  title: Yup.string().trim().min(3, 'Atleast 3 signs').max(80).required('A title is required'),\r\n  category: Yup.mixed<BlogpostCategory>().oneOf(Object.values(BlogpostCategory) as BlogpostCategory[]).required('Topic is required'),\r\n  text: Yup.string().trim().min(5, 'Atleast 5 signs').max(8000).required('A text has to be entered'),\r\n});\r\n\r\nexport default function SinglePageBlogpostModify({\r\n                                                   providedId,\r\n                                                   genres,\r\n                                                 }: {\r\n  providedId?: string;\r\n  genres?: BlogpostCategory[];\r\n}) {\r\n  const navigate = useNavigate();\r\n  const { blogpostId: routeId } = useParams();\r\n  const blogpostId = providedId ?? routeId ?? undefined;\r\n\r\n  const mode: Mode = blogpostId ? 'edit' : 'create';\r\n  const categoryOptions = (genres ?? (Object.values(BlogpostCategory) as BlogpostCategory[]));\r\n\r\n  const [initialValues, setInitialValues] = React.useState<FormValues>({\r\n    title: '',\r\n    category: '' as unknown as BlogpostCategory,\r\n    text: '',\r\n  });\r\n  const [loading, setLoading] = React.useState(false);\r\n\r\n  React.useEffect(() => {\r\n    if (mode !== 'edit' || !blogpostId) return;\r\n    setLoading(true);\r\n    BlogpostService.getBlogpostById(blogpostId)\r\n      .then((bp) => {\r\n        setInitialValues({\r\n          title: bp.title ?? '',\r\n          category: bp.category ?? ('' as unknown as BlogpostCategory),\r\n          text: bp.text ?? '',\r\n        });\r\n      })\r\n      .finally(() => setLoading(false));\r\n  }, [mode, blogpostId]);\r\n\r\n  return (\r\n    <Grid>\r\n      <CssBaseline enableColorScheme />\r\n      <Box sx={styles.container}>\r\n        <Card sx={styles.card} variant=\"outlined\">\r\n          <Typography sx={styles.title}>\r\n            {mode === 'create' ? 'Create Blogpost' : 'Edit Blogpost'}\r\n          </Typography>\r\n\r\n          <Formik<FormValues>\r\n            enableReinitialize\r\n            initialValues={initialValues}\r\n            validationSchema={Schema}\r\n            onSubmit={async (values, { setSubmitting, setStatus }) => {\r\n              setStatus(undefined);\r\n              try {\r\n                const dto: BlogpostDTO = {\r\n                  title: values.title.trim(),\r\n                  text: values.text.trim(),\r\n                  category: values.category,\r\n                };\r\n                if (mode === 'create') {\r\n                  await BlogpostService.createBlogpost(dto);\r\n                } else {\r\n                  if (!blogpostId) throw new Error('No Blogpost-Id available');\r\n                  await BlogpostService.updateBlogpost(blogpostId, dto);\r\n                }\r\n                navigate('/blogposts');\r\n              } catch (e: any) {\r\n                setStatus(e?.response?.data?.message ?? e?.message ?? 'Error while saving');\r\n              } finally {\r\n                setSubmitting(false);\r\n              }\r\n            }}\r\n          >\r\n            {({ handleSubmit, getFieldProps, touched, errors, isSubmitting, status }) => (\r\n              <Box component=\"form\" onSubmit={handleSubmit} noValidate sx={{ display: 'flex', flexDirection: 'column', gap: 2 }}>\r\n                <BlogpostForm\r\n                  getFieldProps={getFieldProps as (name: keyof BlogpostFormValues) => any}\r\n                  touched={touched as any}\r\n                  errors={errors as any}\r\n                  categoryOptions={categoryOptions}\r\n                />\r\n\r\n                {status && <Typography variant=\"body2\" color=\"error\">{status}</Typography>}\r\n\r\n                <Box sx={styles.footer}>\r\n                  <Button type=\"button\" variant=\"contained\" sx={styles.cancel} onClick={() => navigate('/')} disabled={isSubmitting}>\r\n                    Cancel\r\n                  </Button>\r\n                  <Button type=\"submit\" variant=\"contained\" sx={styles.save} disabled={isSubmitting || loading}>\r\n                    {mode === 'create' ? 'Save' : 'Update'}\r\n                  </Button>\r\n                </Box>\r\n              </Box>\r\n            )}\r\n          </Formik>\r\n        </Card>\r\n      </Box>\r\n    </Grid>\r\n  );\r\n}\r\n","C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\components\\pages\\BlogpostOverview\\SinglePageBlogpostModifyStyles.ts",[],"C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\components\\molecules\\BlogpostForm\\BlogpostForm.tsx",[],"C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\components\\pages\\BlogpostOverview\\SinglePageBlogpost.tsx",[],"C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\components\\pages\\BlogpostOverview\\SinglePageBlogpostStyles.ts",[],{"ruleId":"210","replacedBy":"211"},{"ruleId":"212","replacedBy":"213"},{"ruleId":"214","severity":1,"message":"215","line":180,"column":6,"nodeType":"216","endLine":180,"endColumn":8,"suggestions":"217"},{"ruleId":"218","severity":1,"message":"219","line":20,"column":3,"nodeType":"220","messageId":"221","endLine":20,"endColumn":31,"fix":"222"},{"ruleId":"223","severity":1,"message":"224","line":6,"column":3,"nodeType":"225","messageId":"226","endLine":6,"endColumn":13},{"ruleId":"223","severity":1,"message":"227","line":7,"column":3,"nodeType":"225","messageId":"226","endLine":7,"endColumn":7},{"ruleId":"223","severity":1,"message":"228","line":5,"column":17,"nodeType":"225","messageId":"226","endLine":5,"endColumn":29},{"ruleId":"223","severity":1,"message":"229","line":6,"column":18,"nodeType":"225","messageId":"226","endLine":6,"endColumn":29},{"ruleId":"223","severity":1,"message":"230","line":7,"column":18,"nodeType":"225","messageId":"226","endLine":7,"endColumn":27},{"ruleId":"223","severity":1,"message":"228","line":4,"column":17,"nodeType":"225","messageId":"226","endLine":4,"endColumn":29},{"ruleId":"223","severity":1,"message":"229","line":5,"column":18,"nodeType":"225","messageId":"226","endLine":5,"endColumn":29},{"ruleId":"231","severity":1,"message":"232","line":33,"column":1,"nodeType":"233","endLine":33,"endColumn":44},{"ruleId":"231","severity":1,"message":"232","line":29,"column":1,"nodeType":"233","endLine":29,"endColumn":50},{"ruleId":"231","severity":1,"message":"232","line":25,"column":1,"nodeType":"233","endLine":25,"endColumn":52},{"ruleId":"223","severity":1,"message":"234","line":13,"column":3,"nodeType":"225","messageId":"226","endLine":13,"endColumn":13},{"ruleId":"231","severity":1,"message":"232","line":32,"column":1,"nodeType":"233","endLine":32,"endColumn":50},{"ruleId":"223","severity":1,"message":"235","line":4,"column":35,"nodeType":"225","messageId":"226","endLine":4,"endColumn":46},{"ruleId":"223","severity":1,"message":"236","line":4,"column":48,"nodeType":"225","messageId":"226","endLine":4,"endColumn":57},{"ruleId":"223","severity":1,"message":"237","line":5,"column":3,"nodeType":"225","messageId":"226","endLine":5,"endColumn":11},{"ruleId":"223","severity":1,"message":"238","line":5,"column":13,"nodeType":"225","messageId":"226","endLine":5,"endColumn":22},"no-native-reassign",["239"],"no-negated-in-lhs",["240"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadActiveUser'. Either include it or remove the dependency array.","ArrayExpression",["241"],"no-useless-rename","Destructuring assignment requiredAuths unnecessarily renamed.","Property","unnecessarilyRenamed",{"range":"242","text":"243"},"@typescript-eslint/no-unused-vars","'Typography' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'TrendingIcon' is defined but never used.","'SparkleIcon' is defined but never used.","'QuoteIcon' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'IconButton' is defined but never used.","'FormControl' is defined but never used.","'FormLabel' is defined but never used.","'MenuItem' is defined but never used.","'TextField' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"244","fix":"245"},[536,564],"requiredAuths","Update the dependencies array to be: [loadActiveUser]",{"range":"246","text":"247"},[5968,5970],"[loadActiveUser]"]