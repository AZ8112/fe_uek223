[{"C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\index.tsx":"1","C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\App.tsx":"2","C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\Contexts\\ActiveUserContext.tsx":"3","C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\Router\\Router.tsx":"4","C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\Services\\UserService.ts":"5","C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\config\\Api.ts":"6","C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\config\\Authorities.ts":"7","C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\Services\\AuthorityService.ts":"8","C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\Router\\PrivateRoute.tsx":"9","C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\components\\pages\\UserPage\\UserPage.tsx":"10","C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\components\\pages\\UserPage\\UserTable.tsx":"11","C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\components\\pages\\LoginPage\\LoginPage.tsx":"12","C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\components\\molecules\\UserForm\\UserForm.tsx":"13","C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\components\\pages\\LoggedInHomePage\\LoggedInHomePage.tsx":"14","C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\components\\pages\\HomePage\\HomePage.tsx":"15","C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\Services\\BlogpostService.ts":"16","C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\types\\models\\Blogpost.ts":"17","C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\components\\molecules\\UserActionButtons\\UserActionButtons.tsx":"18","C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\components\\molecules\\AuthButtonGroup\\AuthButtonGroup.tsx":"19","C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\components\\molecules\\PostCard\\PostCard.tsx":"20","C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\components\\organisms\\TrendingTopics\\TrendingTopics.tsx":"21","C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\components\\organisms\\HeroSection\\HeroSection.tsx":"22","C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\components\\organisms\\WelcomeSection\\WelcomeSection.tsx":"23","C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\components\\atoms\\SecondaryButton\\SecondaryButton.tsx":"24","C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\components\\atoms\\SecondaryButton\\SecondaryButtonStyles.ts":"25","C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\components\\atoms\\TextButton\\TextButton.tsx":"26","C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\components\\atoms\\PrimaryButton\\PrimaryButton.tsx":"27","C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\components\\atoms\\PrimaryButton\\PrimaryButtonStyles.ts":"28","C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\components\\atoms\\TextButton\\TextButtonStyles.ts":"29","C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\config\\Roles.ts":"30","C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\components\\pages\\BlogpostOverview\\BlogpostOverview.tsx":"31","C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\components\\pages\\RegisterPage\\RegisterPage.tsx":"32","C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\components\\pages\\RegisterPage\\RegisterPageStyle.ts":"33"},{"size":382,"mtime":1758092582899,"results":"34","hashOfConfig":"35"},{"size":316,"mtime":1758092582888,"results":"36","hashOfConfig":"35"},{"size":6610,"mtime":1758092582888,"results":"37","hashOfConfig":"35"},{"size":2359,"mtime":1758717009394,"results":"38","hashOfConfig":"35"},{"size":762,"mtime":1758717860616,"results":"39","hashOfConfig":"35"},{"size":1817,"mtime":1758092582898,"results":"40","hashOfConfig":"35"},{"size":197,"mtime":1758092582898,"results":"41","hashOfConfig":"35"},{"size":1247,"mtime":1758092582891,"results":"42","hashOfConfig":"35"},{"size":2401,"mtime":1758092582889,"results":"43","hashOfConfig":"35"},{"size":1114,"mtime":1758092582897,"results":"44","hashOfConfig":"35"},{"size":1936,"mtime":1758092582897,"results":"45","hashOfConfig":"35"},{"size":3559,"mtime":1758719758782,"results":"46","hashOfConfig":"35"},{"size":3345,"mtime":1758092582893,"results":"47","hashOfConfig":"35"},{"size":5954,"mtime":1758716604440,"results":"48","hashOfConfig":"35"},{"size":6629,"mtime":1758716604438,"results":"49","hashOfConfig":"35"},{"size":1165,"mtime":1758713707867,"results":"50","hashOfConfig":"35"},{"size":751,"mtime":1758716604442,"results":"51","hashOfConfig":"35"},{"size":694,"mtime":1758713707907,"results":"52","hashOfConfig":"35"},{"size":1689,"mtime":1758713707898,"results":"53","hashOfConfig":"35"},{"size":1969,"mtime":1758716604435,"results":"54","hashOfConfig":"35"},{"size":1600,"mtime":1758713707921,"results":"55","hashOfConfig":"35"},{"size":2882,"mtime":1758713707910,"results":"56","hashOfConfig":"35"},{"size":1256,"mtime":1758713707926,"results":"57","hashOfConfig":"35"},{"size":639,"mtime":1758713707885,"results":"58","hashOfConfig":"35"},{"size":669,"mtime":1758713707887,"results":"59","hashOfConfig":"35"},{"size":618,"mtime":1758713707896,"results":"60","hashOfConfig":"35"},{"size":645,"mtime":1758713707879,"results":"61","hashOfConfig":"35"},{"size":690,"mtime":1758713707881,"results":"62","hashOfConfig":"35"},{"size":497,"mtime":1758713707897,"results":"63","hashOfConfig":"35"},{"size":79,"mtime":1758716604441,"results":"64","hashOfConfig":"35"},{"size":8542,"mtime":1758716604436,"results":"65","hashOfConfig":"35"},{"size":7503,"mtime":1758719629344,"results":"66","hashOfConfig":"35"},{"size":834,"mtime":1758719464737,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"1saynk2",{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"70"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"88","usedDeprecatedRules":"70"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"70"},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"70"},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"121","messages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"70"},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"70"},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"70"},{"filePath":"134","messages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"136","messages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"70"},{"filePath":"139","messages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\index.tsx",[],["143","144"],"C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\App.tsx",[],"C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\Contexts\\ActiveUserContext.tsx",["145"],"import { createContext, useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport api from \"../config/Api\";\r\nimport roles from \"../config/Roles\";\r\nimport AuthorityService from \"../Services/AuthorityService\";\r\nimport UserService from \"../Services/UserService\";\r\nimport { User } from \"../types/models/User.model\";\r\nimport { Nullable } from \"../types/Nullable\";\r\nimport * as jwt from \"jsonwebtoken\";\r\nimport {JwtPayload} from \"jsonwebtoken\";\r\n\r\n/**\r\n * USER_DATA_LOCAL_STORAGE_KEY defines the localStorageKey in which the\r\n * activeUser gets stored.\r\n */\r\nexport const USER_DATA_LOCAL_STORAGE_KEY = \"user\";\r\nexport const TOKEN_LOCAL_STORAGE_KEY = \"token\";\r\n\r\n/**\r\n * ActiveUserContextType defines the provided values\r\n */\r\nexport type ActiveUserContextType = {\r\n  user: Nullable<User>;\r\n  login: (email: string, password: string) => Promise<boolean>;\r\n  logout: () => void;\r\n  setActiveUser: (user: User) => void;\r\n  loadActiveUser: () => void;\r\n  checkRole: (roleToCheck: keyof typeof roles) => boolean;\r\n};\r\n\r\n/**\r\n * noContextProviderFound is a method that throws an error and is used\r\n * inside the defaultContextValue\r\n */\r\nconst noContextProviderFound = () => {\r\n  throw new Error(\"No provider for the ActiveUserContext found\");\r\n};\r\n\r\n/**\r\n * defaultContextValue defines the default values for the ActiveUserContext.\r\n */\r\nconst defaultContextValue: ActiveUserContextType = {\r\n  user: null,\r\n  login: noContextProviderFound,\r\n  logout: noContextProviderFound,\r\n  setActiveUser: noContextProviderFound,\r\n  loadActiveUser: noContextProviderFound,\r\n  checkRole: noContextProviderFound,\r\n};\r\n\r\n/**\r\n * ActiveUserContext has the purpose of providing the currently active user\r\n * as well as related values, modifiers and related operations such as login\r\n * and logout.\r\n */\r\nconst ActiveUserContext =\r\n  createContext<ActiveUserContextType>(defaultContextValue);\r\nexport default ActiveUserContext;\r\n\r\n/**\r\n * Props for the ActiveUserContextProvider Component\r\n */\r\ntype ActiveUserContextProviderProps = {\r\n  children: React.ReactNode;\r\n};\r\n\r\n/**\r\n * ActiveUserContextProvider Component is used to provide the ActiveUserContext\r\n * to all child-components.\r\n * @param children consists of all the elements that are located inside the\r\n */\r\nexport const ActiveUserContextProvider = ({\r\n  children,\r\n}: ActiveUserContextProviderProps) => {\r\n  /**\r\n   * Try to load the user data that is stored inside the LocalStorage.\r\n   * If non is present, null will be returned.\r\n   */\r\n  const loadSavedUserData = (): Nullable<User> => {\r\n    const storeUser = localStorage.getItem(USER_DATA_LOCAL_STORAGE_KEY);\r\n    if (storeUser === null) return null;\r\n    return JSON.parse(storeUser);\r\n  };\r\n\r\n  // The following line defines the user state which is holding the user\r\n  // data inside this context.\r\n  const [user, setUser] = useState<Nullable<User>>(() => loadSavedUserData());\r\n  const navigate = useNavigate();\r\n  /**\r\n   * Update the user that is provided by the ActiveUserContext\r\n   * @param updatedUser\r\n   */\r\n  const setActiveUser = (updatedUser: User) => {\r\n    setUser(updatedUser);\r\n    localStorage.setItem(\r\n      USER_DATA_LOCAL_STORAGE_KEY,\r\n      JSON.stringify(updatedUser)\r\n    );\r\n  };\r\n\r\n  /**\r\n   * Remove all user and authorization related data from the localStorage\r\n   */\r\n  const resetAuthorization = () => {\r\n    // Reset the stored data inside the AuthorityService.\r\n    AuthorityService.clearAuthorities();\r\n    // Clear all data from the localStorage.\r\n    localStorage.clear();\r\n    // Set the user, which is stored inside the context to null.\r\n    setUser(null);\r\n  };\r\n\r\n  /**\r\n   * Logout the currently active user by resetting the stored user data\r\n   * and redirecting to the LoginPage.\r\n   */\r\n  const logout = () => {\r\n    // If no token is saved inside the local storage clear the localStorage directly\r\n    if (localStorage.getItem(TOKEN_LOCAL_STORAGE_KEY) === null) {\r\n      resetAuthorization();\r\n      return;\r\n    }\r\n    // If a token is present send a logout-request and clear the localStorage afterwards\r\n    api.get(\"/logout\").finally(resetAuthorization);\r\n    //navigate to login page\r\n    navigate(\"/login\");\r\n  };\r\n\r\n  /**\r\n   * Login with the provided credentials. If successful the current user gets\r\n   * updated and stored inside the context. Also the JWT-Token for further\r\n   * request based authentication is stored inside the localStorage.\r\n   * @param email\r\n   * @param password\r\n   */\r\n  const login = async (email: string, password: string) => {\r\n    await api.post(\"user/login\", { email, password }).then((response: any) => {\r\n      console.log(response.headers.authorization);\r\n      localStorage.setItem(\r\n        TOKEN_LOCAL_STORAGE_KEY,\r\n        response.headers.authorization\r\n      );\r\n      const tokenString = response.headers.authorization.replace('Bearer ', '');\r\n      const token = jwt.decode(tokenString) as JwtPayload;\r\n        UserService.getUser(token.sub!).then((user: User) => {\r\n          setActiveUser(user);\r\n        })\r\n      return true;\r\n    });\r\n    return false;\r\n  };\r\n\r\n  /**\r\n   * Request the user data for the currently active user from the api\r\n   * and save it to the context-state.\r\n   */\r\n  const loadActiveUser = () => {\r\n    return user\r\n      ? UserService.getUser(user.id).then((res: any) => {\r\n          setActiveUser(res);\r\n        })\r\n      : null;\r\n  };\r\n\r\n  function activeUserHasRole(roleToCheck: keyof typeof roles): boolean {\r\n    return user ? user.roles.some((role) => role.name === roleToCheck) : false;\r\n  }\r\n\r\n  /**\r\n   * Try to load the user-object from the localStorage if present.\r\n   * This is done automatically on the first render of this component.\r\n   */\r\n  useEffect(() => {\r\n    const token = localStorage.getItem(TOKEN_LOCAL_STORAGE_KEY);\r\n    if (token !== null) {\r\n      loadActiveUser();\r\n    }\r\n  }, []);\r\n\r\n  /**\r\n   * If the user state is updated and the user is not equal to null,\r\n   * the data used in the AuthorityService as well as the data stored inside\r\n   * the localStorage will be updated with the new user-data.\r\n   */\r\n  useEffect(() => {\r\n    if (user !== null) {\r\n      AuthorityService.initAuthoritySet(user);\r\n      localStorage.setItem(USER_DATA_LOCAL_STORAGE_KEY, JSON.stringify(user));\r\n    }\r\n  }, [user]);\r\n\r\n  return (\r\n    <div>\r\n      <ActiveUserContext.Provider\r\n        value={{\r\n          user,\r\n          setActiveUser,\r\n          login,\r\n          logout,\r\n          loadActiveUser,\r\n          checkRole: activeUserHasRole,\r\n        }}\r\n      >\r\n        {children}\r\n      </ActiveUserContext.Provider>\r\n    </div>\r\n  );\r\n};\r\n","C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\Router\\Router.tsx",[],"C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\Services\\UserService.ts",[],"C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\config\\Api.ts",[],"C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\config\\Authorities.ts",[],"C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\Services\\AuthorityService.ts",[],"C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\Router\\PrivateRoute.tsx",["146"],"import React, { useContext } from 'react';\r\nimport { Navigate } from 'react-router-dom';\r\nimport * as jwt from 'jsonwebtoken';\r\nimport ActiveUserContext from '../Contexts/ActiveUserContext';\r\nimport AuthorityService from '../Services/AuthorityService';\r\nimport { Button } from '@mui/material';\r\nimport authorities from '../config/Authorities';\r\n\r\ninterface Props {\r\n  element: React.ReactElement;\r\n  requiredAuths: authorities[];\r\n}\r\n\r\ntype JWTType = {\r\n  iss: string;\r\n  exp: number;\r\n};\r\n\r\nconst PrivateRoute: React.FC<Props> = ({\r\n  requiredAuths: requiredAuths,\r\n  element: RouteComponent,\r\n}) => {\r\n  const activeUserContext = useContext(ActiveUserContext);\r\n  /**\r\n   * isLoggedIn checks if the token, which is saved inside the localStorage,\r\n   * exists, isn't expired yet and has been issued by the correct issuer.\r\n   * If all of the above is true the user is seen as logged in.\r\n   */\r\n  const isLoggedIn = () => {\r\n    let tokenString = localStorage.getItem('token');\r\n    if (!tokenString) {\r\n      console.error('no token found');\r\n      return false;\r\n    }\r\n    tokenString = tokenString.replace('Bearer ', '');\r\n    const token: JWTType = jwt.decode(tokenString) as JWTType;\r\n    // Check if token does not exist or doesn't have an expiration claim or is expired.\r\n    if (!token || !token.exp || token.exp < Date.now() / 1000) {\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n  /**\r\n   * If the user is not logged in call activeUserContext.logout, which destroys\r\n   * all locally saved user data and redirects to /login.\r\n   */\r\n  if (!isLoggedIn()) {\r\n    activeUserContext.logout();\r\n    return <Navigate to='/login' replace={true} />;\r\n  }\r\n  /**\r\n   * Check if the active user has at least 1 of the needed authorities.\r\n   * If no authorities are needed true is returned.\r\n   */\r\n  let hasNeededAuthorities =\r\n    requiredAuths.length === 0 ||\r\n    requiredAuths.some(AuthorityService.hasAuthority);\r\n\r\n  /**\r\n   * If the user doesn't possess the needed authorities Redirect the user to\r\n   * /unauthorized\r\n   */\r\n  if (!hasNeededAuthorities) {\r\n    return <Navigate to='/unauthorized' replace={true} />;\r\n  }\r\n\r\n  // All checks passed\r\n  return (\r\n    //Pagelayout puts the Navigation, Menu etc. around the component\r\n    <div>\r\n      <Button onClick={activeUserContext.logout}>Logout</Button>\r\n      {RouteComponent}\r\n    </div>\r\n  );\r\n};\r\nexport default PrivateRoute;\r\n","C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\components\\pages\\UserPage\\UserPage.tsx",[],"C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\components\\pages\\UserPage\\UserTable.tsx",[],"C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\components\\pages\\LoginPage\\LoginPage.tsx",["147","148"],"C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\components\\molecules\\UserForm\\UserForm.tsx",[],"C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\components\\pages\\LoggedInHomePage\\LoggedInHomePage.tsx",[],"C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\components\\pages\\HomePage\\HomePage.tsx",["149","150","151"],"import { Box, Container, Typography, Grid, Paper, Chip } from '@mui/material';\r\nimport {\r\n  Create as CreateIcon,\r\n  People as PeopleIcon,\r\n  TrendingUp as TrendingIcon,\r\n  AutoAwesome as SparkleIcon,\r\n  FormatQuote as QuoteIcon,\r\n  Category as CategoryIcon\r\n} from '@mui/icons-material';\r\nimport logo from '../../../logo1.png';\r\nimport HeroSection from '../../organisms/HeroSection/HeroSection';\r\nimport AuthButtonGroup from '../../molecules/AuthButtonGroup/AuthButtonGroup';\r\nimport { BlogpostCategory } from '../../../types/models/Blogpost';\r\n\r\nexport default function HomePage() {\r\n    return (\r\n      <>\r\n        {/* NAVBAR PLACEHOLDER - Add your navigation component here */}\r\n\r\n        {/* Hero Section */}\r\n        <HeroSection\r\n          title=\"OurSpace Blog\"\r\n          subtitle=\"Discover fascinating stories, share your thoughts, and connect with a community of creative minds.\"\r\n          logoSrc={logo}\r\n        >\r\n          <AuthButtonGroup />\r\n        </HeroSection>\r\n\r\n        {/* Features Section */}\r\n        <Container maxWidth=\"lg\" sx={{ py: 8 }}>\r\n          <Typography\r\n            variant=\"h3\"\r\n            align=\"center\"\r\n            sx={{ mb: 6, fontWeight: 'bold' }}\r\n          >\r\n            Why OurSpace?\r\n          </Typography>\r\n          <Grid container spacing={4} sx={{ mb: 4 }}>\r\n            <Grid item xs={12} md={4}>\r\n              <Paper\r\n                elevation={0}\r\n                sx={{\r\n                  p: 4,\r\n                  textAlign: 'center',\r\n                  height: '100%',\r\n                  bgcolor: 'rgba(15, 15, 207, 0.05)',\r\n                  borderRadius: 3,\r\n                  transition: 'transform 0.3s',\r\n                  '&:hover': {\r\n                    transform: 'translateY(-8px)',\r\n                    boxShadow: '0 8px 24px rgba(0,0,0,0.1)'\r\n                  }\r\n                }}\r\n              >\r\n                <CreateIcon sx={{ fontSize: 48, color: '#0f0fcf', mb: 2 }} />\r\n                <Typography variant=\"h5\" sx={{ mb: 2, fontWeight: 'bold' }}>\r\n                    Creative writing\r\n                </Typography>\r\n                <Typography variant=\"body1\" color=\"text.secondary\">\r\n                    Write and publish your own blog posts with our\r\n                    intuitive editor. Share your ideas with the world.\r\n                </Typography>\r\n              </Paper>\r\n            </Grid>\r\n            <Grid item xs={12} md={4}>\r\n              <Paper\r\n                elevation={0}\r\n                sx={{\r\n                  p: 4,\r\n                  textAlign: 'center',\r\n                  height: '100%',\r\n                  bgcolor: 'rgba(0, 212, 255, 0.05)',\r\n                  borderRadius: 3,\r\n                  transition: 'transform 0.3s',\r\n                  '&:hover': {\r\n                    transform: 'translateY(-8px)',\r\n                    boxShadow: '0 8px 24px rgba(0,0,0,0.1)'\r\n                  }\r\n                }}\r\n              >\r\n                <PeopleIcon sx={{ fontSize: 48, color: '#00d4ff', mb: 2 }} />\r\n                <Typography variant=\"h5\" sx={{ mb: 2, fontWeight: 'bold' }}>\r\n                  Community\r\n                </Typography>\r\n                <Typography variant=\"body1\" color=\"text.secondary\">\r\n                    Read exciting blog posts from your favorite authors and discover new perspectives.\r\n                </Typography>\r\n              </Paper>\r\n            </Grid>\r\n            <Grid item xs={12} md={4}>\r\n              <Paper\r\n                elevation={0}\r\n                sx={{\r\n                  p: 4,\r\n                  textAlign: 'center',\r\n                  height: '100%',\r\n                  bgcolor: 'rgba(15, 15, 207, 0.05)',\r\n                  borderRadius: 3,\r\n                  transition: 'transform 0.3s',\r\n                  '&:hover': {\r\n                    transform: 'translateY(-8px)',\r\n                    boxShadow: '0 8px 24px rgba(0,0,0,0.1)'\r\n                  }\r\n                }}\r\n              >\r\n                <CategoryIcon sx={{ fontSize: 48, color: '#0f0fcf', mb: 2 }} />\r\n                <Typography variant=\"h5\" sx={{ mb: 2, fontWeight: 'bold' }}>\r\n                    Diverse topics\r\n                </Typography>\r\n                <Typography variant=\"body1\" color=\"text.secondary\">\r\n                    From technology to lifestyle to travel –\r\n                    find content on all the topics that interest you.\r\n                </Typography>\r\n              </Paper>\r\n            </Grid>\r\n          </Grid>\r\n        </Container>\r\n\r\n        {/* Categories Showcase */}\r\n        <Box sx={{ bgcolor: '#f5f5f5', py: 8 }}>\r\n          <Container maxWidth=\"lg\">\r\n            <Typography\r\n              variant=\"h3\"\r\n              align=\"center\"\r\n              sx={{ mb: 6, fontWeight: 'bold' }}\r\n            >\r\n                Popular Categories\r\n            </Typography>\r\n            <Grid container spacing={2} justifyContent=\"center\">\r\n              {Object.values(BlogpostCategory).filter(cat => cat !== 'OTHER').map((category) => (\r\n                <Grid item key={category}>\r\n                  <Chip\r\n                    label={category.charAt(0) + category.slice(1).toLowerCase()}\r\n                    sx={{\r\n                      fontSize: '1rem',\r\n                      py: 2.5,\r\n                      px: 2,\r\n                      background: 'linear-gradient(135deg, #0f0fcf, #00d4ff)',\r\n                      color: 'white',\r\n                      fontWeight: 'bold',\r\n                      transition: 'transform 0.2s',\r\n                      '&:hover': {\r\n                        transform: 'scale(1.05)'\r\n                      }\r\n                    }}\r\n                  />\r\n                </Grid>\r\n              ))}\r\n            </Grid>\r\n          </Container>\r\n        </Box>\r\n\r\n        {/* Call to Action Section */}\r\n        <Box\r\n          sx={{\r\n            background: 'linear-gradient(135deg, #0f0fcf, #00d4ff)',\r\n            color: 'white',\r\n            py: 10,\r\n            textAlign: 'center'\r\n          }}\r\n        >\r\n          <Container maxWidth=\"md\">\r\n            <Typography\r\n              variant=\"h3\"\r\n              sx={{\r\n                mb: 3,\r\n                fontWeight: 'bold',\r\n                textShadow: '2px 2px 4px rgba(0,0,0,0.3)'\r\n              }}\r\n            >\r\n                Ready to tell your story?\r\n            </Typography>\r\n            <Typography variant=\"h6\" sx={{ opacity: 0.95 }}>\r\n                Join our community of authors and readers.\r\n                Register for free and start writing today!\r\n            </Typography>\r\n          </Container>\r\n        </Box>\r\n      </>\r\n    );\r\n}","C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\Services\\BlogpostService.ts",[],"C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\types\\models\\Blogpost.ts",[],"C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\components\\molecules\\UserActionButtons\\UserActionButtons.tsx",[],"C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\components\\molecules\\AuthButtonGroup\\AuthButtonGroup.tsx",[],"C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\components\\molecules\\PostCard\\PostCard.tsx",[],"C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\components\\organisms\\TrendingTopics\\TrendingTopics.tsx",[],"C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\components\\organisms\\HeroSection\\HeroSection.tsx",["152","153"],"import React from 'react';\r\nimport { Box, Container, Typography, Grid, Chip } from '@mui/material';\r\nimport {\r\n  TrendingUp as TrendingIcon,\r\n  AutoAwesome as SparkleIcon\r\n} from '@mui/icons-material';\r\n\r\ninterface HeroSectionProps {\r\n  title: string;\r\n  subtitle: string;\r\n  logoSrc: string;\r\n  children?: React.ReactNode;\r\n  stats?: Array<{\r\n    icon: React.ReactNode;\r\n    label: string;\r\n  }>;\r\n}\r\n\r\nconst HeroSection: React.FC<HeroSectionProps> = ({\r\n  title,\r\n  subtitle,\r\n  logoSrc,\r\n  children,\r\n  stats\r\n}) => {\r\n  return (\r\n    <Box\r\n      sx={{\r\n        background: 'linear-gradient(135deg, #0f0fcf, #00d4ff)',\r\n        color: '#fff',\r\n        pt: 8,\r\n        pb: 12,\r\n        position: 'relative',\r\n        overflow: 'hidden'\r\n      }}\r\n    >\r\n      <Container maxWidth=\"lg\">\r\n        <Grid container spacing={4} alignItems=\"center\">\r\n          <Grid item xs={12} md={6}>\r\n            <Typography\r\n              variant=\"h2\"\r\n              component=\"h1\"\r\n              sx={{\r\n                fontWeight: 'bold',\r\n                mb: 3,\r\n                textShadow: '2px 2px 4px rgba(0,0,0,0.3)'\r\n              }}\r\n            >\r\n              {title}\r\n            </Typography>\r\n            <Typography\r\n              variant=\"h5\"\r\n              sx={{\r\n                mb: 4,\r\n                opacity: 0.95,\r\n                lineHeight: 1.6\r\n              }}\r\n            >\r\n              {subtitle}\r\n            </Typography>\r\n\r\n            {stats && (\r\n              <Box sx={{ display: 'flex', gap: 2, flexWrap: 'wrap', mb: 4 }}>\r\n                {stats.map((stat, index) => (\r\n                  <Chip\r\n                    key={index}\r\n                    icon={<>{stat.icon}</>}\r\n                    label={stat.label}\r\n                    sx={{\r\n                      bgcolor: 'rgba(255,255,255,0.2)',\r\n                      color: 'white',\r\n                      fontSize: '1rem',\r\n                      py: 2.5\r\n                    }}\r\n                  />\r\n                ))}\r\n              </Box>\r\n            )}\r\n\r\n            {children}\r\n          </Grid>\r\n\r\n          <Grid item xs={12} md={6}>\r\n            <Box\r\n              component=\"img\"\r\n              src={logoSrc}\r\n              alt=\"OurSpace Logo\"\r\n              sx={{\r\n                width: '100%',\r\n                maxWidth: '400px',\r\n                height: 'auto',\r\n                display: 'block',\r\n                margin: '0 auto',\r\n                filter: 'drop-shadow(0 10px 30px rgba(0,0,0,0.3))',\r\n                animation: 'float 3s ease-in-out infinite',\r\n                '@keyframes float': {\r\n                  '0%, 100%': { transform: 'translateY(0px)' },\r\n                  '50%': { transform: 'translateY(-20px)' }\r\n                }\r\n              }}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default HeroSection;","C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\components\\organisms\\WelcomeSection\\WelcomeSection.tsx",[],"C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\components\\atoms\\SecondaryButton\\SecondaryButton.tsx",[],"C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\components\\atoms\\SecondaryButton\\SecondaryButtonStyles.ts",["154"],"import { SxProps } from \"@mui/material\";\r\n\r\nconst lightButton: SxProps = {\r\n  borderColor: 'white',\r\n  color: 'white',\r\n  fontWeight: 'bold',\r\n  px: 4,\r\n  py: 1.5,\r\n  borderWidth: 2,\r\n  '&:hover': {\r\n    borderColor: 'white',\r\n    borderWidth: 2,\r\n    bgcolor: 'rgba(255,255,255,0.1)',\r\n    transform: 'translateY(-2px)'\r\n  }\r\n};\r\n\r\nconst darkButton: SxProps = {\r\n  borderColor: '#0f0fcf',\r\n  color: '#0f0fcf',\r\n  fontWeight: 'bold',\r\n  px: 4,\r\n  py: 1.5,\r\n  borderWidth: 2,\r\n  '&:hover': {\r\n    borderColor: '#0f0fcf',\r\n    borderWidth: 2,\r\n    bgcolor: 'rgba(15,15,207,0.05)',\r\n    transform: 'translateY(-2px)'\r\n  }\r\n};\r\n\r\nexport default { lightButton, darkButton };","C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\components\\atoms\\TextButton\\TextButton.tsx",[],"C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\components\\atoms\\PrimaryButton\\PrimaryButton.tsx",[],"C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\components\\atoms\\PrimaryButton\\PrimaryButtonStyles.ts",["155"],"import { SxProps } from \"@mui/material\";\r\n\r\nconst gradientButton: SxProps = {\r\n  background: 'linear-gradient(135deg, #0f0fcf, #00d4ff)',\r\n  color: 'white',\r\n  fontWeight: 'bold',\r\n  px: 4,\r\n  py: 1.5,\r\n  '&:hover': {\r\n    background: 'linear-gradient(135deg, #0a0aaf, #00b4dd)',\r\n    transform: 'translateY(-2px)',\r\n    boxShadow: '0 8px 20px rgba(0,0,0,0.3)'\r\n  }\r\n};\r\n\r\nconst defaultButton: SxProps = {\r\n  bgcolor: 'white',\r\n  color: '#0f0fcf',\r\n  fontWeight: 'bold',\r\n  px: 4,\r\n  py: 1.5,\r\n  '&:hover': {\r\n    bgcolor: 'rgba(255,255,255,0.9)',\r\n    transform: 'translateY(-2px)',\r\n    boxShadow: '0 8px 20px rgba(0,0,0,0.3)'\r\n  }\r\n};\r\n\r\nexport default { gradientButton, defaultButton };","C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\components\\atoms\\TextButton\\TextButtonStyles.ts",["156"],"import { SxProps } from \"@mui/material\";\r\n\r\nconst lightTextButton: SxProps = {\r\n  color: 'white',\r\n  fontWeight: 'bold',\r\n  px: 4,\r\n  py: 1.5,\r\n  '&:hover': {\r\n    bgcolor: 'rgba(255,255,255,0.1)',\r\n    transform: 'translateY(-2px)'\r\n  }\r\n};\r\n\r\nconst darkTextButton: SxProps = {\r\n  color: '#0f0fcf',\r\n  fontWeight: 'bold',\r\n  px: 4,\r\n  py: 1.5,\r\n  '&:hover': {\r\n    bgcolor: 'rgba(15,15,207,0.05)',\r\n    transform: 'translateY(-2px)'\r\n  }\r\n};\r\n\r\nexport default { lightTextButton, darkTextButton };","C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\config\\Roles.ts",[],"C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\components\\pages\\BlogpostOverview\\BlogpostOverview.tsx",["157"],"import React, { useContext, useEffect, useState } from 'react';\r\nimport {\r\n  Container,\r\n  Grid,\r\n  Card,\r\n  CardContent,\r\n  Typography,\r\n  Box,\r\n  Chip,\r\n  CircularProgress,\r\n  Alert,\r\n  Button,\r\n  IconButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogActions,\r\n  Avatar\r\n} from '@mui/material';\r\nimport {\r\n  Delete as DeleteIcon,\r\n  Edit as EditIcon\r\n} from '@mui/icons-material';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport ActiveUserContext from '../../../Contexts/ActiveUserContext';\r\nimport BlogpostService from '../../../Services/BlogpostService';\r\nimport { Blogpost } from '../../../types/models/Blogpost';\r\nimport roles from '../../../config/Roles';\r\n\r\nconst BlogpostOverview: React.FC = () => {\r\n  const navigate = useNavigate();\r\n  const { user } = useContext(ActiveUserContext);\r\n  const [blogposts, setBlogposts] = useState<Blogpost[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [deleteDialogOpen, setDeleteDialogOpen] = useState(false);\r\n  const [postToDelete, setPostToDelete] = useState<string | null>(null);\r\n\r\n  // Check if user is admin (only if user is logged in)\r\n  const isAdmin = user && user.roles?.some(role => role.name === roles.ADMIN);\r\n\r\n  useEffect(() => {\r\n    fetchBlogposts();\r\n  }, []);\r\n\r\n  const fetchBlogposts = async () => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n      const data = await BlogpostService.getAllBlogposts();\r\n      // Sort by most recent first\r\n      const sortedData = data.sort((a, b) => {\r\n        const dateA = a.createdAt ? new Date(a.createdAt).getTime() : 0;\r\n        const dateB = b.createdAt ? new Date(b.createdAt).getTime() : 0;\r\n        return dateB - dateA;\r\n      });\r\n      setBlogposts(sortedData);\r\n    } catch (err: any) {\r\n      console.error('Error fetching blogposts:', err);\r\n      setError(err.response?.data?.message || 'Failed to load blogposts');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleCardClick = (blogpostId: string) => {\r\n    navigate(`/blogpost/${blogpostId}`);\r\n  };\r\n\r\n  const handleEdit = (e: React.MouseEvent, blogpostId: string) => {\r\n    e.stopPropagation();\r\n    navigate(`/blogpost/edit/${blogpostId}`);\r\n  };\r\n\r\n  const handleDeleteClick = (e: React.MouseEvent, blogpostId: string) => {\r\n    e.stopPropagation();\r\n    setPostToDelete(blogpostId);\r\n    setDeleteDialogOpen(true);\r\n  };\r\n\r\n  const handleDeleteConfirm = async () => {\r\n    if (postToDelete) {\r\n      try {\r\n        await BlogpostService.deleteBlogpost(postToDelete);\r\n        await fetchBlogposts(); // Refresh the list\r\n        setDeleteDialogOpen(false);\r\n        setPostToDelete(null);\r\n      } catch (err: any) {\r\n        console.error('Error deleting blogpost:', err);\r\n        alert(err.response?.data?.message || 'Failed to delete blogpost');\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleDeleteCancel = () => {\r\n    setDeleteDialogOpen(false);\r\n    setPostToDelete(null);\r\n  };\r\n\r\n  const getExcerpt = (text: string) => {\r\n    if (!text) return '';\r\n    const maxLength = 300; // Increased for better preview\r\n    return text.length > maxLength ? text.substring(0, maxLength) + '...' : text;\r\n  };\r\n\r\n  const formatCategory = (category: string) => {\r\n    if (!category) return 'OTHER';\r\n    return category.charAt(0) + category.slice(1).toLowerCase();\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <Container sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', minHeight: '60vh' }}>\r\n        <CircularProgress />\r\n      </Container>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <Container sx={{ mt: 4 }}>\r\n        <Alert severity=\"error\">{error}</Alert>\r\n        <Button onClick={fetchBlogposts} sx={{ mt: 2 }}>\r\n          Retry\r\n        </Button>\r\n      </Container>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Container maxWidth=\"lg\" sx={{ py: 4 }}>\r\n      <Typography variant=\"h3\" sx={{ mb: 4, fontWeight: 'bold', textAlign: 'center' }}>\r\n        All Blogposts\r\n      </Typography>\r\n\r\n      {blogposts.length === 0 ? (\r\n        <Alert severity=\"info\">No blogposts available yet.</Alert>\r\n      ) : (\r\n        <Grid container spacing={3} justifyContent=\"center\">\r\n          {blogposts.map((post) => (\r\n            <Grid item xs={12} sm={6} md={4} key={post.id}>\r\n              <Card\r\n                onClick={() => handleCardClick(post.id)}\r\n                sx={{\r\n                  height: '100%',\r\n                  display: 'flex',\r\n                  flexDirection: 'column',\r\n                  cursor: 'pointer',\r\n                  position: 'relative',\r\n                  transition: 'transform 0.2s, box-shadow 0.2s',\r\n                  '&:hover': {\r\n                    transform: 'translateY(-4px)',\r\n                    boxShadow: '0 8px 24px rgba(0,0,0,0.15)'\r\n                  }\r\n                }}\r\n              >\r\n                <CardContent sx={{ flexGrow: 1, display: 'flex', flexDirection: 'column' }}>\r\n\r\n                  {/* Author and Category */}\r\n                  <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>\r\n                    <Avatar sx={{ bgcolor: '#0f0fcf', width: 32, height: 32, mr: 1 }}>\r\n                      {post.author?.firstName?.[0] || 'A'}\r\n                    </Avatar>\r\n                    <Box sx={{ flexGrow: 1 }}>\r\n                      <Typography variant=\"body2\" color=\"text.secondary\">\r\n                        {`${post.author?.firstName || ''} ${post.author?.lastName || ''}`.trim() || 'Anonymous'}\r\n                      </Typography>\r\n                    </Box>\r\n                    <Chip\r\n                      label={formatCategory(post.category)}\r\n                      size=\"small\"\r\n                      sx={{\r\n                        background: 'linear-gradient(135deg, #0f0fcf, #00d4ff)',\r\n                        color: 'white',\r\n                        fontWeight: 'bold'\r\n                      }}\r\n                    />\r\n                  </Box>\r\n\r\n                  {/* Title */}\r\n                  <Typography variant=\"h6\" sx={{ mb: 1, fontWeight: 'bold' }}>\r\n                    {post.title || 'Untitled'}\r\n                  </Typography>\r\n\r\n                  {/* Excerpt */}\r\n                  <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mb: 2, flexGrow: 1 }}>\r\n                    {getExcerpt(post.text)}\r\n                  </Typography>\r\n\r\n                  {/* Date - positioned at bottom */}\r\n                  <Box sx={{ mt: 'auto', mb: 1 }}>\r\n                    <Typography variant=\"caption\" color=\"text.secondary\">\r\n                      {post.createdAt ? new Date(post.createdAt).toLocaleDateString() : 'Recently'}\r\n                    </Typography>\r\n                  </Box>\r\n\r\n                  {/* Admin Actions */}\r\n                  {isAdmin && (\r\n                    <Box sx={{ display: 'flex', gap: 1, mt: 2 }}>\r\n                      <Button\r\n                        size=\"small\"\r\n                        variant=\"outlined\"\r\n                        startIcon={<EditIcon />}\r\n                        onClick={(e) => handleEdit(e, post.id)}\r\n                        sx={{ flexGrow: 1 }}\r\n                      >\r\n                        Update\r\n                      </Button>\r\n                      <Button\r\n                        size=\"small\"\r\n                        variant=\"outlined\"\r\n                        color=\"error\"\r\n                        startIcon={<DeleteIcon />}\r\n                        onClick={(e) => handleDeleteClick(e, post.id)}\r\n                        sx={{ flexGrow: 1 }}\r\n                      >\r\n                        Delete\r\n                      </Button>\r\n                    </Box>\r\n                  )}\r\n                </CardContent>\r\n              </Card>\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n      )}\r\n\r\n      {/* Delete Confirmation Dialog */}\r\n      <Dialog\r\n        open={deleteDialogOpen}\r\n        onClose={handleDeleteCancel}\r\n      >\r\n        <DialogTitle>Confirm Delete</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            Are you sure you want to delete this blogpost? This action cannot be undone.\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleDeleteCancel}>Cancel</Button>\r\n          <Button onClick={handleDeleteConfirm} color=\"error\" variant=\"contained\">\r\n            Delete\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default BlogpostOverview;","C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\components\\pages\\RegisterPage\\RegisterPage.tsx",[],"C:\\Users\\mert2\\Documents\\GitHub\\FE_uek223_Me_Az_Le\\src\\components\\pages\\RegisterPage\\RegisterPageStyle.ts",["158"],{"ruleId":"159","replacedBy":"160"},{"ruleId":"161","replacedBy":"162"},{"ruleId":"163","severity":1,"message":"164","line":178,"column":6,"nodeType":"165","endLine":178,"endColumn":8,"suggestions":"166"},{"ruleId":"167","severity":1,"message":"168","line":20,"column":3,"nodeType":"169","messageId":"170","endLine":20,"endColumn":31,"fix":"171"},{"ruleId":"172","severity":1,"message":"173","line":6,"column":3,"nodeType":"174","messageId":"175","endLine":6,"endColumn":13},{"ruleId":"172","severity":1,"message":"176","line":7,"column":3,"nodeType":"174","messageId":"175","endLine":7,"endColumn":7},{"ruleId":"172","severity":1,"message":"177","line":5,"column":17,"nodeType":"174","messageId":"175","endLine":5,"endColumn":29},{"ruleId":"172","severity":1,"message":"178","line":6,"column":18,"nodeType":"174","messageId":"175","endLine":6,"endColumn":29},{"ruleId":"172","severity":1,"message":"179","line":7,"column":18,"nodeType":"174","messageId":"175","endLine":7,"endColumn":27},{"ruleId":"172","severity":1,"message":"177","line":4,"column":17,"nodeType":"174","messageId":"175","endLine":4,"endColumn":29},{"ruleId":"172","severity":1,"message":"178","line":5,"column":18,"nodeType":"174","messageId":"175","endLine":5,"endColumn":29},{"ruleId":"180","severity":1,"message":"181","line":33,"column":1,"nodeType":"182","endLine":33,"endColumn":44},{"ruleId":"180","severity":1,"message":"181","line":29,"column":1,"nodeType":"182","endLine":29,"endColumn":50},{"ruleId":"180","severity":1,"message":"181","line":25,"column":1,"nodeType":"182","endLine":25,"endColumn":52},{"ruleId":"172","severity":1,"message":"183","line":13,"column":3,"nodeType":"174","messageId":"175","endLine":13,"endColumn":13},{"ruleId":"180","severity":1,"message":"181","line":32,"column":1,"nodeType":"182","endLine":32,"endColumn":50},"no-native-reassign",["184"],"no-negated-in-lhs",["185"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadActiveUser'. Either include it or remove the dependency array.","ArrayExpression",["186"],"no-useless-rename","Destructuring assignment requiredAuths unnecessarily renamed.","Property","unnecessarilyRenamed",{"range":"187","text":"188"},"@typescript-eslint/no-unused-vars","'Typography' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'TrendingIcon' is defined but never used.","'SparkleIcon' is defined but never used.","'QuoteIcon' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'IconButton' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"189","fix":"190"},[536,564],"requiredAuths","Update the dependencies array to be: [loadActiveUser]",{"range":"191","text":"192"},[5854,5856],"[loadActiveUser]"]